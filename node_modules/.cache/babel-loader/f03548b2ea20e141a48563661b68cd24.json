{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'HelloWorld',\n  data: function data() {\n    return {\n      container: null,\n      blitzboard: null,\n      config: null,\n      graph: ''\n    };\n  },\n  // created() {\n  //   var scripts = [\n  //     \"https://unpkg.com/vis-network@9.0.4/standalone/umd/vis-network.min.js\",\n  //     \"https://unpkg.com/leaflet@1.6.0/dist/leaflet.js\",\n  //     \"https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js\",\n  //     \"https://code.iconify.design/2/2.0.4/iconify.min.js\",\n  //     \"https://code.jquery.com/jquery-3.6.0.min.js\",\n  //     \"/blitzboard/lib/pg_parser_browserified.js\",\n  //     \"/blitzboard/blitzboard.js\"\n  //   ];\n  //   scripts.forEach(script => {\n  //     let tag = document.createElement(\"script\");\n  //     tag.setAttribute(\"src\", script);\n  //     document.head.appendChild(tag);\n  //   });\n  // },\n  mounted: function mounted() {\n    this.container = document.getElementById('blitzboard');\n    this.blitzboard = new Blitzboard(this.container); // no-undef\n\n    this.config = {\n      node: {\n        caption: ['id'],\n        icon: {\n          'Property': 'f38f',\n          'Tax': 'f26d',\n          'Account': 'f119',\n          'Income': 'f316'\n        }\n      },\n      edge: {\n        caption: ['label']\n      }\n    }; // pg를 통해서 그래프 생성\n    // this.blitzboard.setGraph(this.graph, false);\n    // this.blitzboard.setConfig(this.config);\n  },\n  methods: {\n    update: function update() {\n      // sample\n      this.graph = 'I :person name:\"your name\" \\n' + 'You :person \\n' + 'Graph :graph \\n' + 'I -> Graph :say word:Hello date:today \\n' + 'You -> I :say word:Goodbye date:yesterday \\n';\n      this.blitzboard.setGraph(this.graph, false);\n      this.blitzboard.setConfig(this.config); // nodeLineMap안에 각 PG의 라인 단위로 맵이 생성됨 (각 맵안에는 offset등 Location정보도 포함)\n\n      var node = this.blitzboard.nodeLineMap[3]; // 2번째 노드정보를 가져옴\n\n      console.log(node);\n      this.blitzboard.scrollNodeIntoView(node); // 해당 노드를 하이라이트하여 중앙으로 이동시킴\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;AAYA;EACAA,kBADA;EAGAC;IAAA;MACAC,eADA;MAEAC,gBAFA;MAGAC,YAHA;MAIAC;IAJA;EAAA,CAHA;EASA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,OAzBA,qBAyBA;IACA;IACA,iDAFA,CAEA;;IAEA;MACAC;QACAC,eADA;QAEAC;UACA,kBADA;UAEA,aAFA;UAGA,iBAHA;UAIA;QAJA;MAFA,CADA;MAUAC;QACAF;MADA;IAVA,EAJA,CAmBA;IACA;IACA;EACA,CA/CA;EAgDAG;IACAC,MADA,oBACA;MAEA;MACA,+CACA,gBADA,GAEA,iBAFA,GAGA,0CAHA,GAIA,8CAJA;MAMA;MACA,uCAVA,CAYA;;MACA,0CAbA,CAaA;;MACAC;MAEA,yCAhBA,CAgBA;IAEA;EAnBA;AAhDA","names":["name","data","container","blitzboard","config","graph","mounted","node","caption","icon","edge","methods","update","console"],"sourceRoot":"src/components","sources":["HelloWorld.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-btn color=\"primary\" rounded @click=\"update\">Start</v-btn>\n    <v-btn color=\"primary\" rounded @click=\"move\">Move</v-btn>\n    <div style=\"border: solid 3px black; height: 700px; width: 100%;\" id='blitzboard'>\n    </div>\n  </v-container>\n</template>\n\n<script>\n  \n\n  export default {\n    name: 'HelloWorld',\n    \n    data: () => ({\n      container: null,\n      blitzboard: null,\n      config: null,\n      graph: ''\n    }),\n    // created() {\n    //   var scripts = [\n    //     \"https://unpkg.com/vis-network@9.0.4/standalone/umd/vis-network.min.js\",\n    //     \"https://unpkg.com/leaflet@1.6.0/dist/leaflet.js\",\n    //     \"https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js\",\n    //     \"https://code.iconify.design/2/2.0.4/iconify.min.js\",\n    //     \"https://code.jquery.com/jquery-3.6.0.min.js\",\n    //     \"/blitzboard/lib/pg_parser_browserified.js\",\n    //     \"/blitzboard/blitzboard.js\"\n    //   ];\n    //   scripts.forEach(script => {\n    //     let tag = document.createElement(\"script\");\n    //     tag.setAttribute(\"src\", script);\n    //     document.head.appendChild(tag);\n    //   });\n    // },\n    mounted() {\n        this.container = document.getElementById('blitzboard');\n        this.blitzboard = new Blitzboard(this.container); // no-undef\n\n        this.config = {\n          node: {\n            caption: ['id'],\n            icon: {\n              'Property': 'f38f',\n              'Tax': 'f26d',\n              'Account': 'f119',\n              'Income': 'f316',\n            },\n          },\n          edge: {\n            caption: ['label'],\n          },\n        }\n\n        // pg를 통해서 그래프 생성\n        // this.blitzboard.setGraph(this.graph, false);\n        // this.blitzboard.setConfig(this.config);\n    },\n    methods: {\n      update() {\n        \n        // sample\n        this.graph = 'I :person name:\"your name\" \\n'\n        + 'You :person \\n'\n        + 'Graph :graph \\n'\n        + 'I -> Graph :say word:Hello date:today \\n'\n        + 'You -> I :say word:Goodbye date:yesterday \\n';\n\n        this.blitzboard.setGraph(this.graph, false);\n        this.blitzboard.setConfig(this.config);\n\n        // nodeLineMap안에 각 PG의 라인 단위로 맵이 생성됨 (각 맵안에는 offset등 Location정보도 포함)\n        const node = this.blitzboard.nodeLineMap[3]; // 2번째 노드정보를 가져옴\n        console.log(node);\n\n        this.blitzboard.scrollNodeIntoView(node); // 해당 노드를 하이라이트하여 중앙으로 이동시킴\n\n      }\n    }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module"}