{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _typeof from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _toConsumableArray from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createClass from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.math.log2.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nvar q = document.querySelector.bind(document);\nvar qa = document.querySelectorAll.bind(document);\n\nvar DuplicateNodeError = /*#__PURE__*/function (_Error) {\n  _inherits(DuplicateNodeError, _Error);\n\n  var _super = _createSuper(DuplicateNodeError);\n\n  function DuplicateNodeError(nodes) {\n    var _this;\n\n    _classCallCheck(this, DuplicateNodeError);\n\n    _this = _super.call(this, \"Duplicate node: \".concat(nodes.map(function (n) {\n      return n.id;\n    }).join(', ')));\n    _this.name = \"NodeDuplicationError\";\n    _this.nodes = nodes;\n    return _this;\n  }\n\n  return _createClass(DuplicateNodeError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar Blitzboard = /*#__PURE__*/function () {\n  function Blitzboard(container) {\n    _classCallCheck(this, Blitzboard);\n\n    this.container = container;\n    this.nodeColorMap = {};\n    this.expandedNodes = [];\n    this.nodeMap = {};\n    this.config = {\n      node: {},\n      edge: {}\n    };\n    this.nodeLineMap = {};\n    this.edgeMap = {};\n    this.edgeLineMap = {};\n    this.prevZoomPosition = null;\n    this.warnings = [];\n    this.container.style.position = 'absolute';\n    this.networkContainer = document.createElement('div');\n    this.networkContainer.style = \"\\n      height: 100%;\\n      width: 100%;\\n      top: 0;\\n      left: 0;\\n      position: absolute;\\n      z-index: 2;\\n    \";\n    this.mapContainer = document.createElement('div');\n    this.mapContainer.style = \"\\n      height: 100%;\\n      width: 100%;\\n      top: 0;\\n      left: 0;\\n      position: absolute;\\n      z-index: 1;\\n    \";\n    this.map = null;\n    this.minTime = new Date(8640000000000000);\n    this.maxTime = new Date(-8640000000000000);\n    this.prevMouseEvent = null;\n    this.timeScale = 1000;\n    this.dragging = false;\n    this.currentLatLng = null;\n    this.redrawTimer = null;\n    this.onNodeAdded = [];\n    this.onEdgeAdded = [];\n    this.onNodeFocused = [];\n    this.onEdgeFocused = [];\n    this.maxLine = 0;\n    this.scrollAnimationTimerId = null;\n    this.screen = document.createElement('div');\n    this.screenText = document.createElement('div');\n    this.screenText.style = \"\\n      font-size: 2rem;\\n      background-color: rgba(255, 255, 255, 0.5);\\n      padding: 10px;\\n    \";\n    this.screen.appendChild(this.screenText);\n    this.screenText.innerText = \"Now loading...\";\n    this.screen.style = \"\\n      background-color: rgba(0, 0, 0, 0.3);\\n      z-index: 3;\\n      position: absolute;\\n      height: 100%;\\n      width: 100%;\\n      display: none;\\n      justify-content: center;\\n      align-items: center;\\n      font-size: 2rem;\\n    \";\n    this.doubleClickTimer = null;\n    var blitzboard = this;\n    container.appendChild(this.screen);\n    container.appendChild(this.networkContainer);\n    container.appendChild(this.mapContainer);\n    this.container.addEventListener('wheel', function (e) {\n      if (blitzboard.config.layout === 'map') {\n        if (e.deltaY < 0 && blitzboard.map._zoom < blitzboard.map.getMaxZoom() || e.deltaY > 0 && blitzboard.map._zoom > blitzboard.map.getMinZoom()) {\n          if (!blitzboard.currentLatLng) {\n            blitzboard.currentLatLng = blitzboard.map.mouseEventToLatLng(e);\n          }\n\n          blitzboard.map.setZoomAround(blitzboard.currentLatLng, blitzboard.map._zoom - e.deltaY * 0.03, {\n            animate: false\n          });\n        }\n\n        var newScale = blitzboard.map._zoom / 12 + 0.4;\n        newScale = Math.min(Blitzboard.maxScaleOnMap, Math.max(newScale, Blitzboard.minScaleOnMap));\n        setTimeout(function () {\n          blitzboard.network.moveTo({\n            scale: newScale\n          });\n          blitzboard.updateNodeLocationOnMap();\n        }, 10);\n        blitzboard.map.invalidateSize();\n        e.preventDefault();\n        e.stopPropagation(); // Inhibit zoom on vis-network\n      }\n    }, true);\n    this.container.addEventListener('mouseout', function (e) {\n      blitzboard.prevMouseEvent = null;\n      blitzboard.dragging = false;\n    }, true);\n    this.container.addEventListener('mouseup', function (e) {\n      blitzboard.dragging = false;\n      blitzboard.prevMouseEvent = null;\n    }, true);\n    this.container.addEventListener('mousemove', function (e) {\n      if (blitzboard.dragging && blitzboard.config.layout === 'map' && blitzboard.prevMouseEvent) {\n        blitzboard.map.panBy([blitzboard.prevMouseEvent.x - e.x, blitzboard.prevMouseEvent.y - e.y], {\n          animate: false\n        });\n      }\n\n      blitzboard.prevMouseEvent = e;\n      blitzboard.currentLatLng = null;\n    }, true);\n    this.container.addEventListener('dblclick', function (e) {\n      if (blitzboard.config.layout === 'map') {\n        blitzboard.map.panTo(blitzboard.map.mouseEventToLatLng(e));\n      }\n    }, true);\n    this.container.addEventListener('mousedown', function (e) {\n      blitzboard.dragging = true;\n      blitzboard.prevMouseEvent = e;\n    }, true);\n  }\n\n  _createClass(Blitzboard, [{\n    key: \"getHexColors\",\n    value: function getHexColors(colorStr) {\n      var computed = Blitzboard.renderedColors[colorStr];\n\n      if (computed) {\n        return computed;\n      }\n\n      var a = document.createElement('div');\n      a.style.color = colorStr;\n      var colors = window.getComputedStyle(document.body.appendChild(a)).color.match(/\\d+/g).map(function (a) {\n        return parseInt(a, 10);\n      });\n      document.body.removeChild(a);\n      Blitzboard.renderedColors[colorStr] = colors;\n      return colors;\n    }\n  }, {\n    key: \"hasNode\",\n    value: function hasNode(node_id) {\n      return !!this.nodeMap[node_id];\n    }\n  }, {\n    key: \"hasEdge\",\n    value: function hasEdge(from, to) {\n      var label = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var _iterator = _createForOfIteratorHelper(this.graph.edges),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var edge = _step.value;\n          if (edge.from === from && edge.to === to && (!label || edge.labels.includes(label))) return true;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getAllNodes\",\n    value: function getAllNodes() {\n      var _this2 = this;\n\n      var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (label) return this.graph.nodes.filter(function (node) {\n        return node.labels.includes(label);\n      }).map(function (node) {\n        return _this2.getNode(node.id);\n      });else return this.graph.nodes.map(function (node) {\n        return _this2.getNode(node.id);\n      });\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode(node_id) {\n      return new Proxy(this.nodeMap[node_id], Blitzboard.blitzProxy);\n    }\n  }, {\n    key: \"getEdge\",\n    value: function getEdge(edge_id) {\n      return new Proxy(this.edgeMap[edge_id], Blitzboard.blitzProxy);\n    }\n  }, {\n    key: \"calcNodePosition\",\n    value: function calcNodePosition(pgNode) {\n      var x, y, fixed, width;\n\n      if (this.config.layout === 'timeline' && this.timeInterval > 0) {\n        x = null;\n        fixed = false;\n        var fromProp = this.config.layoutSettings.time_from;\n        var toProp = this.config.layoutSettings.time_to;\n        var from = this.maxTime;\n        var to = this.minTime;\n\n        for (var _i = 0, _Object$keys = Object.keys(pgNode.properties); _i < _Object$keys.length; _i++) {\n          var prop = _Object$keys[_i];\n\n          if (prop === fromProp || prop === toProp) {\n            from = new Date(Math.min(from, new Date(pgNode.properties[prop][0])));\n            to = new Date(Math.max(to, new Date(pgNode.properties[prop][0])));\n          }\n        }\n\n        if (from <= to) {\n          fixed = true;\n          var fromPosition = this.timeScale * (from.getTime() - this.minTime.getTime()) * 1.0 / this.timeInterval - this.timeScale * 0.5;\n          var toPosition = this.timeScale * (to.getTime() - this.minTime.getTime()) * 1.0 / this.timeInterval - this.timeScale * 0.5;\n          x = (fromPosition + toPosition) / 2;\n\n          if (from === to) {\n            width = fromPosition - toPosition;\n          } else {\n            width = 25;\n          }\n        } else {\n          x = 0;\n        }\n      } else {\n        if (this.config.layout == 'custom') {\n          if (pgNode.properties[this.config.layoutSettings.x] || pgNode.properties[this.config.layoutSettings.y]) {\n            x = parseInt(pgNode.properties[this.config.layoutSettings.x][0]);\n            y = parseInt(pgNode.properties[this.config.layoutSettings.y][0]);\n            fixed = true;\n          }\n        } else {\n          x = null;\n          y = null;\n          fixed = this.config.layout === 'hierarchical';\n          width = null;\n        }\n      }\n\n      return {\n        x: x,\n        y: y,\n        fixed: fixed,\n        width: width\n      };\n    }\n  }, {\n    key: \"retrieveThumbnailUrl\",\n    value: function retrieveThumbnailUrl(node) {\n      if (this.config.node.thumbnail) {\n        var _node$properties$this;\n\n        return (_node$properties$this = node.properties[this.config.node.thumbnail]) === null || _node$properties$this === void 0 ? void 0 : _node$properties$this[0];\n      }\n\n      return null;\n    }\n  }, {\n    key: \"toVisNode\",\n    value: function toVisNode(pgNode, props) {\n      var extraOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var group = _toConsumableArray(pgNode.labels).sort().join('_');\n\n      if (!this.nodeColorMap[group]) {\n        this.nodeColorMap[group] = getRandomColor(group, this.config.node.saturation, this.config.node.brightness);\n      }\n\n      var x, y, fixed, width;\n\n      var _this$calcNodePositio = this.calcNodePosition(pgNode);\n\n      x = _this$calcNodePositio.x;\n      y = _this$calcNodePositio.y;\n      fixed = _this$calcNodePositio.fixed;\n      width = _this$calcNodePositio.width;\n      var url = retrieveHttpUrl(pgNode);\n      var thumbnailUrl = this.retrieveThumbnailUrl(pgNode);\n      var expanded = this.expandedNodes.includes(pgNode.id);\n      var degree = pgNode.properties['degree'];\n      var blitzboard = this;\n\n      if (degree !== undefined) {\n        degree = degree[0];\n      } else {\n        degree = 2; // assume degree to be two (default)\n      }\n\n      var color = this.retrieveConfigProp(pgNode, 'node', 'color');\n      var opacity = parseFloat(this.retrieveConfigProp(pgNode, 'node', 'opacity'));\n      var size = parseFloat(this.retrieveConfigProp(pgNode, 'node', 'size'));\n      var shape = this.retrieveConfigProp(pgNode, 'node', 'shape');\n      color = color || this.nodeColorMap[group];\n\n      if (opacity < 1) {\n        var rgb = this.getHexColors(color);\n        color = \"rgba(\".concat(rgb[0], \", \").concat(rgb[1], \", \").concat(rgb[2], \", \").concat(opacity, \")\");\n      }\n\n      var attrs = {\n        id: pgNode.id,\n        color: color,\n        label: createLabelText(pgNode, props),\n        shape: shape || 'dot',\n        size: size || 25,\n        degree: degree,\n        title: createTitleText(pgNode),\n        fixed: {\n          x: fixed,\n          y: this.config.layout === 'timeline' ? false : fixed\n        },\n        borderWidth: url ? 3 : 1,\n        url: url,\n        x: x,\n        y: y,\n        font: {\n          color: url ? 'blue' : 'black'\n        },\n        fixedByTime: fixed\n      };\n\n      function iconRegisterer(name) {\n        return function (icons) {\n          if (icons.length > 0) {\n            var icon = null;\n\n            if (icons.length > 1) {\n              // Find icon with the highest priority \n              var _iterator2 = _createForOfIteratorHelper(Blitzboard.iconPrefixes),\n                  _step2;\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var prefix = _step2.value;\n\n                  var _iterator3 = _createForOfIteratorHelper(icons),\n                      _step3;\n\n                  try {\n                    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                      var i = _step3.value;\n\n                      if (\"\".concat(i.prefix, \":\").concat(i.name).startsWith(prefix)) {\n                        icon = i;\n                        break;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator3.e(err);\n                  } finally {\n                    _iterator3.f();\n                  }\n\n                  if (icon) {\n                    break;\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n\n            icon = icon || icons[0];\n\n            var _size = attrs.size * Blitzboard.iconSizeCoef;\n\n            var svg = Iconify.renderSVG(\"\".concat(icon.prefix, \":\").concat(icon.name), {\n              width: _size,\n              height: _size\n            });\n            var img = new Image(); // svg.viewBox.baseVal.width = size;\n            // svg.viewBox.baseVal.height = size;\n\n            svg.querySelectorAll(\"path\").forEach(function (path) {\n              path.style.fill = \"white\";\n              path.style.stroke = \"white\";\n            });\n            img.src = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg.outerHTML);\n            Blitzboard.loadedIcons[name] = img;\n\n            if (blitzboard) {\n              if (blitzboard.redrawTimer) {\n                clearTimeout(blitzboard.redrawTimer);\n              }\n\n              blitzboard.redrawTimer = setTimeout(function () {\n                // Add delay to avoid redraw too ofen\n                blitzboard.network.redraw();\n              }, 1000);\n            }\n          }\n        };\n      }\n\n      var _iterator4 = _createForOfIteratorHelper(pgNode.labels),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _this$config$node$ico;\n\n          var label = _step4.value;\n          var icon = void 0;\n\n          if (icon = (_this$config$node$ico = this.config.node.icon) === null || _this$config$node$ico === void 0 ? void 0 : _this$config$node$ico[label]) {\n            if (icon.includes(':')) {\n              // For icons in iconify\n              Iconify.loadIcons([icon], iconRegisterer(icon));\n              attrs['customIcon'] = {\n                name: icon\n              };\n            } else {\n              // For icon codes in Ionicons (to be backward compatible)\n              var code = String.fromCharCode(parseInt(icon, 16));\n              attrs['customIcon'] = {\n                face: 'Ionicons',\n                size: attrs.size * 1.5,\n                code: code,\n                color: 'white'\n              };\n              break;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      if (!attrs['customIcon'] && this.config.node.defaultIcon) {\n        var _iterator5 = _createForOfIteratorHelper(pgNode.labels),\n            _step5;\n\n        try {\n          var _loop = function _loop() {\n            var label = _step5.value;\n            var lowerLabel = label.toLowerCase();\n\n            if (!Blitzboard.loadedIcons[lowerLabel]) {\n              Blitzboard.loadedIcons[lowerLabel] = 'retrieving...'; // Just a placeholder to avoid duplicate fetching\n\n              Iconify.loadIcons(Blitzboard.iconPrefixes.map(function (prefix) {\n                return prefix + lowerLabel;\n              }), iconRegisterer(lowerLabel));\n            }\n          };\n\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n\n      if (thumbnailUrl) {\n        attrs['shape'] = 'image';\n        attrs['image'] = thumbnailUrl;\n      }\n\n      attrs = Object.assign(attrs, extraOptions);\n      return attrs;\n    }\n  }, {\n    key: \"retrieveConfigProp\",\n    value: function retrieveConfigProp(pgElem, type, propName) {\n      var _this$config;\n\n      var labels = pgElem.labels.join('_');\n      var propConfig = (_this$config = this.config) === null || _this$config === void 0 ? void 0 : _this$config[type][propName];\n\n      if (typeof propConfig === 'function') {\n        return propConfig(new Proxy(pgElem, Blitzboard.blitzProxy));\n      } else if (_typeof(propConfig) === 'object') {\n        var _pgElem$properties$th, _this$config2;\n\n        return (_pgElem$properties$th = pgElem.properties[(_this$config2 = this.config) === null || _this$config2 === void 0 ? void 0 : _this$config2[type][propName][labels]]) === null || _pgElem$properties$th === void 0 ? void 0 : _pgElem$properties$th[0];\n      } else if (typeof propConfig === 'string' && propConfig.startsWith('@')) {\n        var _pgElem$properties$pr;\n\n        return (_pgElem$properties$pr = pgElem.properties[propConfig.substr(1)]) === null || _pgElem$properties$pr === void 0 ? void 0 : _pgElem$properties$pr[0];\n      }\n\n      return propConfig; // return as constant\n    }\n  }, {\n    key: \"toVisEdge\",\n    value: function toVisEdge(pgEdge) {\n      var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.config.edge.caption;\n      var id = arguments.length > 2 ? arguments[2] : undefined;\n      var edgeLabel = pgEdge.labels.join('_');\n\n      if (!this.edgeColorMap[edgeLabel]) {\n        this.edgeColorMap[edgeLabel] = getRandomColor(edgeLabel, this.config.edge.saturation || '0%', this.config.edge.brightness || '30%');\n      }\n\n      var length = this.retrieveConfigProp(pgEdge, 'edge', 'length');\n      var width = parseFloat(this.retrieveConfigProp(pgEdge, 'edge', 'width')) || 1;\n      var color = this.retrieveConfigProp(pgEdge, 'edge', 'color');\n      var opacity = parseFloat(this.retrieveConfigProp(pgEdge, 'edge', 'opacity')) || 1;\n      color = color || this.edgeColorMap[edgeLabel];\n\n      if (opacity < 1) {\n        var rgb = this.getHexColors(color);\n        color = \"rgba(\".concat(rgb[0], \", \").concat(rgb[1], \", \").concat(rgb[2], \", \").concat(opacity, \")\");\n      }\n\n      return {\n        id: id,\n        from: pgEdge.from,\n        to: pgEdge.to,\n        color: color,\n        label: createLabelText(pgEdge, props),\n        title: createTitleText(pgEdge),\n        remoteId: id,\n        length: length,\n        width: width,\n        hoverWidth: 0.5,\n        smooth: this.map ? false : {\n          roundness: 1\n        },\n        arrows: {\n          to: {\n            enabled: pgEdge.direction == '->' || pgEdge.undirected === 'false'\n          }\n        }\n      };\n    }\n  }, {\n    key: \"includesNode\",\n    value: function includesNode(node) {\n      return this.graph.nodes.filter(function (e) {\n        return e.id === node.id;\n      }).length > 0;\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode(node) {\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.addNodes([node], update);\n    }\n  }, {\n    key: \"addNodes\",\n    value: function addNodes(nodes) {\n      var _this3 = this;\n\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var newNodes;\n\n      if (typeof nodes === 'string' || nodes instanceof String) {\n        var pg = tryPgParse(nodes);\n        newNodes = pg.nodes;\n      } else {\n        newNodes = nodes;\n      }\n\n      newNodes = newNodes.filter(function (node) {\n        return !_this3.includesNode(node);\n      }).map(function (node) {\n        var mapped = deepMerge(Blitzboard.nodeTemplate, node);\n        ++_this3.maxLine;\n        mapped.location = {\n          start: {\n            line: _this3.maxLine,\n            column: 0\n          },\n          end: {\n            line: _this3.maxLine + 1,\n            column: 0\n          }\n        };\n        return mapped;\n      });\n      this.graph.nodes = this.graph.nodes.concat(newNodes);\n\n      var _iterator6 = _createForOfIteratorHelper(this.onNodeAdded),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var callback = _step6.value;\n          // TODO: The argument should be proxy instead of plain objects\n          callback(newNodes);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      if (update) this.update();\n    }\n  }, {\n    key: \"addEdge\",\n    value: function addEdge(edge) {\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.addEdges([edge], update);\n    }\n  }, {\n    key: \"addEdges\",\n    value: function addEdges(edges) {\n      var _this4 = this;\n\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var newEdges;\n\n      if (typeof edges === 'string' || edges instanceof String) {\n        var pg = tryPgParse(edges);\n        newEdges = pg.edges;\n      } else {\n        newEdges = edges;\n      }\n\n      newEdges = newEdges.map(function (edge) {\n        var mapped = deepMerge(Blitzboard.edgeTemplate, edge);\n        ++_this4.maxLine;\n        mapped.location = {\n          start: {\n            line: _this4.maxLine,\n            column: 0\n          },\n          end: {\n            line: _this4.maxLine + 1,\n            column: 0\n          }\n        };\n        return mapped;\n      });\n      this.graph.edges = this.graph.edges.concat(newEdges);\n\n      var _iterator7 = _createForOfIteratorHelper(this.onEdgeAdded),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var callback = _step7.value;\n          // TODO: The argument should be proxy instead of plain objects\n          callback(newEdges);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      if (update) this.update();\n    }\n  }, {\n    key: \"setGraph\",\n    value: function setGraph(input) {\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.nodeColorMap = {};\n      this.edgeColorMap = {};\n      this.prevMouseEvent = null;\n      this.dragging = false;\n      var newPg;\n\n      if (typeof input === 'string' || input instanceof String) {\n        try {\n          newPg = JSON.parse(input);\n        } catch (err) {\n          if (err instanceof SyntaxError) newPg = tryPgParse(input);else throw err;\n        }\n      } else {\n        newPg = input;\n      }\n\n      if (newPg === null || newPg === undefined) return;\n      this.graph = newPg;\n      if (update) this.update();\n    }\n  }, {\n    key: \"setConfig\",\n    value: function setConfig(config) {\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.config = deepMerge(Blitzboard.defaultConfig, config);\n\n      if (config.layout === 'hierarchical') {\n        // Remove redundant settings when layout is hierarchical\n        this.config.layoutSettings = config.layoutSettings;\n      }\n\n      if (update) this.update(false);\n    }\n  }, {\n    key: \"validateGraph\",\n    value: function validateGraph() {\n      // If duplication of nodes exist, raise error \n      function nonuniqueNodes(nodes) {\n        var nonunique = new Set();\n        var nodeMap = {}; // id -> node\n\n        var _iterator8 = _createForOfIteratorHelper(nodes),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var node = _step8.value;\n\n            if (nodeMap[node.id]) {\n              nonunique.add(nodeMap[node.id]);\n              nonunique.add(node);\n            }\n\n            nodeMap[node.id] = node;\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        return _toConsumableArray(nonunique);\n      }\n\n      var nonunique = nonuniqueNodes(this.graph.nodes);\n\n      if (nonunique.length > 0) {\n        throw new DuplicateNodeError(nonunique);\n      } // If edge refers to undefined nodes, create warnings\n\n\n      var _iterator9 = _createForOfIteratorHelper(this.graph.edges),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var edge = _step9.value;\n\n          if (!this.nodeMap[edge.from]) {\n            this.warnings.push({\n              location: edge.location,\n              message: \"Source node is undefined: \".concat(edge.from)\n            });\n          }\n\n          if (!this.nodeMap[edge.to]) {\n            this.warnings.push({\n              location: edge.location,\n              message: \"Target node is undefined: \".concat(edge.to)\n            });\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this5 = this;\n\n      var applyDiff = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var blitzboard = this;\n      this.warnings = [];\n      applyDiff = applyDiff && this.nodeDataSet && this.edgeDataSet;\n\n      if (applyDiff) {\n        var nodesToDelete = new Set(Object.keys(this.nodeMap));\n        var newEdgeMap = {};\n        this.nodeLineMap = {};\n        this.edgeLineMap = {};\n        this.maxLine = 0;\n        this.graph.nodes.forEach(function (node) {\n          var existingNode = _this5.nodeMap[node.id];\n\n          if (existingNode) {\n            if (!nodeEquals(node, existingNode)) {\n              _this5.nodeDataSet.remove(existingNode);\n\n              var visNode = _this5.toVisNode(node, _this5.config.node.caption);\n\n              _this5.nodeDataSet.update(visNode);\n            }\n          } else {\n            var _visNode = _this5.toVisNode(node, _this5.config.node.caption);\n\n            _this5.nodeDataSet.add(_visNode);\n          }\n\n          _this5.nodeMap[node.id] = node;\n          nodesToDelete.delete(node.id);\n\n          if (node.location) {\n            for (var i = node.location.start.line; i <= node.location.end.line; i++) {\n              if (i < node.location.end.line || node.location.end.column > 1) _this5.nodeLineMap[i] = node;\n            }\n\n            _this5.maxLine = Math.max(_this5.maxLine, node.location.end.line);\n          }\n        });\n        this.graph.edges.forEach(function (edge) {\n          var id = toNodePairString(edge);\n\n          while (newEdgeMap[id]) {\n            id += '_';\n          }\n\n          edge.id = id;\n          newEdgeMap[id] = edge;\n\n          var visEdge = _this5.toVisEdge(edge, _this5.config.edge.caption, id);\n\n          _this5.edgeDataSet.update(visEdge);\n\n          if (edge.location) {\n            for (var i = edge.location.start.line; i <= edge.location.end.line; i++) {\n              if (i < edge.location.end.line || edge.location.end.column > 1) _this5.edgeLineMap[i] = visEdge;\n            }\n          }\n\n          _this5.maxLine = Math.max(_this5.maxLine, edge.location.end.line);\n        });\n        nodesToDelete.forEach(function (nodeId) {\n          _this5.nodeDataSet.remove(_this5.nodeMap[nodeId]);\n\n          delete _this5.nodeMap[nodeId];\n        });\n\n        for (var _i2 = 0, _Object$keys2 = Object.keys(this.edgeMap); _i2 < _Object$keys2.length; _i2++) {\n          var edgeId = _Object$keys2[_i2];\n\n          if (!newEdgeMap[edgeId]) {\n            this.edgeDataSet.remove(edgeId);\n          }\n        }\n\n        this.edgeMap = newEdgeMap;\n\n        if (this.map) {\n          blitzboard.updateNodeLocationOnMap();\n        }\n\n        if (this.config.layout === 'timeline') {\n          blitzboard.updateNodeLocationOnTimeLine();\n        }\n      }\n\n      this.prevZoomPosition = null;\n      this.minTime = new Date(8640000000000000);\n      this.maxTime = new Date(-8640000000000000);\n\n      if (this.config.layout === 'timeline') {\n        var fromProp = this.config.layoutSettings.time_from;\n        var toProp = this.config.layoutSettings.time_to;\n        this.graph.nodes.forEach(function (node) {\n          for (var _i3 = 0, _Object$keys3 = Object.keys(node.properties); _i3 < _Object$keys3.length; _i3++) {\n            var prop = _Object$keys3[_i3];\n\n            if (prop === fromProp || prop === toProp) {\n              _this5.minTime = new Date(Math.min(_this5.minTime, new Date(node.properties[prop][0])));\n              _this5.maxTime = new Date(Math.max(_this5.maxTime, new Date(node.properties[prop][0])));\n            }\n          }\n        });\n        this.timeInterval = this.maxTime - this.minTime;\n      }\n\n      if (applyDiff) {\n        this.validateGraph();\n        return;\n      }\n\n      this.nodeProps = new Set(['id', 'label']);\n      this.edgeProps = new Set(['label']);\n      this.graph.nodes.forEach(function (node) {\n        _this5.nodeMap[node.id] = node;\n\n        if (node.location) {\n          for (var i = node.location.start.line; i <= node.location.end.line; i++) {\n            if (i < node.location.end.line || node.location.end.column > 1) _this5.nodeLineMap[i] = node;\n          }\n        }\n\n        Object.keys(node.properties).filter(function (prop) {\n          return prop != 'degree';\n        }).forEach(_this5.nodeProps.add, _this5.nodeProps);\n      });\n      this.graph.edges.forEach(function (edge) {\n        Object.keys(edge.properties).forEach(_this5.edgeProps.add, _this5.edgeProps);\n      });\n      this.validateGraph();\n      var defaultNodeProps = this.config.node.caption;\n      var defaultEdgeProps = this.config.edge.caption;\n      this.nodeDataSet = new vis.DataSet();\n      this.nodeDataSet.add(this.graph.nodes.map(function (node) {\n        return _this5.toVisNode(node, defaultNodeProps);\n      }));\n      this.edgeMap = {};\n      this.edgeDataSet = new vis.DataSet(this.graph.edges.map(function (edge) {\n        var id = toNodePairString(edge);\n\n        while (_this5.edgeMap[id]) {\n          id += '_';\n        }\n\n        var visEdge = _this5.toVisEdge(edge, defaultEdgeProps, id);\n\n        _this5.edgeMap[visEdge.id] = edge;\n\n        if (edge.location) {\n          for (var i = edge.location.start.line; i <= edge.location.end.line; i++) {\n            if (i < edge.location.end.line || edge.location.end.column > 1) _this5.edgeLineMap[i] = visEdge;\n          }\n        }\n\n        return visEdge;\n      })); // create a network\n\n      var data = {\n        nodes: this.nodeDataSet,\n        edges: this.edgeDataSet\n      };\n      var layout = {\n        randomSeed: 1\n      };\n\n      if (this.config.layout === 'hierarchical') {\n        layout.hierarchical = this.config.layoutSettings;\n      } else {\n        layout.hierarchical = false;\n      }\n\n      this.options = {\n        layout: layout,\n        interaction: {\n          dragNodes: this.config.layout !== 'map',\n          dragView: this.config.layout !== 'map',\n          zoomView: this.config.layout !== 'map',\n          hover: true\n        },\n        physics: {\n          enabled: this.config.layout !== 'map' && this.config.layout !== 'hierarchical',\n          barnesHut: {\n            springConstant: this.config.layout === 'timeline' ? 0.004 : 0.016\n          },\n          stabilization: {\n            enabled: false,\n            iterations: 200,\n            updateInterval: 25\n          }\n        },\n        manipulation: false,\n        edges: {\n          arrows: {\n            to: {\n              enabled: true,\n              scaleFactor: 0.3,\n              type: \"arrow\"\n            }\n          }\n        }\n      };\n      this.options = Object.assign(this.options, this.config.extraOptions);\n      this.network = new vis.Network(this.networkContainer, data, this.options);\n\n      if (this.config.layout === 'map') {\n        var _this$config3, _this$config3$layoutS;\n\n        this.mapContainer.style.display = 'block';\n        var statistics = statisticsOfMap();\n        var center = ((_this$config3 = this.config) === null || _this$config3 === void 0 ? void 0 : (_this$config3$layoutS = _this$config3.layoutSettings) === null || _this$config3$layoutS === void 0 ? void 0 : _this$config3$layoutS.center) || statistics.center;\n\n        if (this.map) {\n          this.map.panTo(center);\n        } else {\n          this.map = L.map(this.mapContainer, {\n            center: center,\n            zoom: statistics.scale,\n            minZoom: 3,\n            zoomSnap: 0.01,\n            zoomControl: false\n          });\n          var tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '© <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\n          });\n          tileLayer.addTo(this.map);\n          this.map.on('move', function () {\n            return blitzboard.updateNodeLocationOnMap();\n          });\n          this.map.on('zoom', function () {\n            return blitzboard.updateNodeLocationOnMap();\n          });\n        }\n\n        blitzboard.network.moveTo({\n          scale: 1.0\n        });\n      } else {\n        this.mapContainer.style.display = 'none';\n\n        if (this.map) {\n          this.map.remove();\n        }\n\n        this.map = null;\n      }\n\n      this.network.on('resize', function (e) {\n        if (blitzboard.config.layout === 'map') {\n          // Fix scale to 1.0 (delay is needed to override scale set by vis-network)  \n          var newScale = Math.min(Blitzboard.maxScaleOnMap, Math.max(blitzboard.network.getScale(), Blitzboard.minScaleOnMap));\n          setTimeout(function () {\n            blitzboard.network.moveTo({\n              scale: newScale\n            });\n            blitzboard.updateNodeLocationOnMap();\n          }, 10);\n          blitzboard.map.invalidateSize();\n        }\n      });\n      this.network.on('dragStart', function (e) {\n        var node = _this5.nodeDataSet.get(e.nodes[0]);\n\n        if (e.nodes.length > 0) {\n          _this5.nodeDataSet.update({\n            id: e.nodes[0],\n            fixed: node.fixedByTime ? {\n              x: true,\n              y: true\n            } : false\n          });\n        }\n      });\n\n      function statisticsOfMap() {\n        var lngKey = blitzboard.config.layoutSettings.lng;\n        var latKey = blitzboard.config.layoutSettings.lat;\n        var lngSum = 0,\n            latSum = 0,\n            count = 0,\n            lngMax = Number.MIN_VALUE,\n            lngMin = Number.MAX_VALUE,\n            latMax = Number.MIN_VALUE,\n            latMin = Number.MAX_VALUE;\n        blitzboard.graph.nodes.forEach(function (node) {\n          if (node.properties[latKey] && node.properties[lngKey]) {\n            var lng = parseFloat(node.properties[lngKey][0]);\n            var lat = parseFloat(node.properties[latKey][0]);\n            lngSum += lng;\n            latSum += lat;\n            lngMax = Math.max(lng, lngMax);\n            lngMin = Math.min(lng, lngMin);\n            latMax = Math.max(lat, latMax);\n            latMin = Math.min(lat, latMin);\n            ++count;\n          }\n        });\n        if (count === 0) return [0, 0];\n        return {\n          center: [latSum / count, lngSum / count],\n          scale: Math.max(-Math.log2(Math.max(Math.abs(lngMax - lngMin), Math.abs(latMax - latMin)) / 1000), 0)\n        };\n      }\n\n      this.network.on(\"zoom\", function () {\n        var _blitzboard$config$zo, _blitzboard$config$zo3;\n\n        var pos = blitzboard.network.getViewPosition();\n\n        if ((_blitzboard$config$zo = blitzboard.config.zoom) !== null && _blitzboard$config$zo !== void 0 && _blitzboard$config$zo.min && blitzboard.network.getScale() < blitzboard.config.zoom.min) {\n          var _blitzboard$config$zo2;\n\n          blitzboard.network.moveTo({\n            position: blitzboard.prevZoomPosition,\n            scale: (_blitzboard$config$zo2 = blitzboard.config.zoom) === null || _blitzboard$config$zo2 === void 0 ? void 0 : _blitzboard$config$zo2.min\n          });\n        } else if ((_blitzboard$config$zo3 = blitzboard.config.zoom) !== null && _blitzboard$config$zo3 !== void 0 && _blitzboard$config$zo3.max && blitzboard.network.getScale() > blitzboard.config.zoom.max) {\n          blitzboard.network.moveTo({\n            position: blitzboard.prevZoomPosition,\n            scale: blitzboard.config.zoom.max\n          });\n        } else {\n          blitzboard.prevZoomPosition = pos;\n        }\n      });\n\n      if (this.map) {\n        this.updateNodeLocationOnMap();\n      }\n\n      this.network.on(\"hoverNode\", function (e) {\n        _this5.network.canvas.body.container.style.cursor = 'default';\n\n        var node = _this5.nodeDataSet.get(e.node);\n\n        if (node && node.url) {\n          _this5.network.canvas.body.container.style.cursor = 'pointer';\n\n          _this5.nodeDataSet.update({\n            id: e.node,\n            color: '#8888ff'\n          });\n\n          if (_this5.config.node.onHover) {\n            _this5.config.node.onHover(_this5.getNode(e.node));\n          }\n        } else if (node && node.degree > 1 && !_this5.expandedNodes.includes(e.node)) {\n          _this5.network.canvas.body.container.style.cursor = 'pointer';\n        }\n      });\n\n      function plotTimes(startTime, interval, intervalUnit, timeForOnePixel, offsetX, offsetY, rightMostX, context, scale) {\n        var currentTime = new Date(startTime);\n\n        switch (intervalUnit) {\n          case 'year':\n            currentTime = new Date(currentTime.getFullYear() - currentTime.getFullYear() % interval, 0, 1);\n            break;\n\n          case 'month':\n            currentTime = new Date(currentTime.getFullYear(), currentTime.getMonth() - currentTime.getMonth() % interval, 1);\n            break;\n\n          case 'day':\n            currentTime = new Date(currentTime.getFullYear(), currentTime.getMonth(), currentTime.getDate());\n            break;\n\n          default:\n            return;\n        }\n\n        var i = 0;\n\n        while (++i < 100) {\n          var nextPosition = -offsetX + (currentTime - startTime) / timeForOnePixel;\n          if (nextPosition > rightMostX) break;\n          if (intervalUnit === 'year') context.fillText(currentTime.getFullYear(), nextPosition, -offsetY);else context.fillText(currentTime.toLocaleDateString(), nextPosition, -offsetY);\n          context.moveTo(nextPosition, -offsetY);\n          context.lineTo(nextPosition, -offsetY + 25 / scale);\n          context.stroke();\n\n          switch (intervalUnit) {\n            case 'year':\n              currentTime.setFullYear(currentTime.getFullYear() + interval);\n              break;\n\n            case 'month':\n              currentTime.setMonth(currentTime.getMonth() + interval);\n              break;\n\n            case 'day':\n              currentTime.setDate(currentTime.getDate() + interval);\n              break;\n\n            default:\n              return;\n          }\n        }\n      }\n\n      this.network.on(\"afterDrawing\", function (ctx) {\n        var _iterator10 = _createForOfIteratorHelper(_this5.graph.nodes),\n            _step10;\n\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var node = _step10.value;\n            node = _this5.nodeDataSet.get(node.id);\n\n            if (node && node.shape !== 'image' && (node.customIcon || _this5.config.node.defaultIcon)) {\n              var position = _this5.network.getPosition(node.id);\n\n              var pgNode = _this5.nodeMap[node.id];\n\n              if (node.customIcon) {\n                if (node.customIcon.name && Blitzboard.loadedIcons[node.customIcon.name]) {\n                  // Iconiy\n                  ctx.drawImage(Blitzboard.loadedIcons[node.customIcon.name], position.x - node.size * Blitzboard.iconSizeCoef / 2, position.y - node.size * Blitzboard.iconSizeCoef / 2, node.size * Blitzboard.iconSizeCoef, node.size * Blitzboard.iconSizeCoef);\n                } else {\n                  // Ionicons\n                  ctx.font = \"\".concat(node.customIcon.size, \"px Ionicons\");\n                  ctx.fillStyle = \"white\";\n                  ctx.textAlign = \"center\";\n                  ctx.textBaseline = \"middle\";\n                  ctx.fillText(node.customIcon.code, position.x, position.y);\n                }\n              } else {\n                if (!pgNode) {\n                  continue;\n                }\n\n                var _iterator11 = _createForOfIteratorHelper(pgNode.labels),\n                    _step11;\n\n                try {\n                  for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                    var label = _step11.value;\n                    var lowerLabel = label.toLowerCase();\n\n                    if (Blitzboard.loadedIcons[lowerLabel]) {\n                      if (Blitzboard.loadedIcons[lowerLabel] != 'retrieving...') ctx.drawImage(Blitzboard.loadedIcons[lowerLabel], position.x - node.size * Blitzboard.iconSizeCoef / 2, position.y - node.size * Blitzboard.iconSizeCoef / 2, node.size * Blitzboard.iconSizeCoef, node.size * Blitzboard.iconSizeCoef);\n                      break;\n                    }\n                  }\n                } catch (err) {\n                  _iterator11.e(err);\n                } finally {\n                  _iterator11.f();\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n\n        if (_this5.config.layout === 'timeline') {\n          var context = _this5.network.canvas.getContext(\"2d\");\n\n          var view = _this5.network.canvas.body.view;\n          var offsetY = (view.translation.y - 20) / view.scale;\n          var offsetX = view.translation.x / view.scale;\n          var timeForOnePixel = (_this5.maxTime - _this5.minTime) / _this5.timeScale;\n          var timeOnLeftEdge = new Date((_this5.maxTime.getTime() + _this5.minTime.getTime()) / 2 - timeForOnePixel * offsetX);\n          var clientWidth = _this5.network.canvas.body.container.clientWidth;\n          var rightMost = -offsetX + clientWidth / view.scale;\n          var oneMonth = 31 * 24 * 60 * 60 * 1000;\n          var oneDay = 24 * 60 * 60 * 1000;\n          var twoMonth = oneMonth * 2;\n          var fourMonth = twoMonth * 2;\n          var oneYear = 365 * oneDay;\n          var minDistance = 200;\n          context.font = (20 / view.scale).toString() + \"px Arial\";\n          context.fillStyle = \"blue\";\n          var minimumInterval = timeForOnePixel * minDistance / view.scale;\n\n          if (minimumInterval > oneYear) {\n            plotTimes(timeOnLeftEdge, minimumInterval / oneYear, 'year', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n          } else if (minimumInterval > fourMonth) {\n            plotTimes(timeOnLeftEdge, 4, 'month', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n          } else if (minimumInterval > twoMonth) {\n            plotTimes(timeOnLeftEdge, 2, 'month', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n          } else if (minimumInterval > oneMonth) {\n            plotTimes(timeOnLeftEdge, 1, 'month', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n          } else if (minimumInterval > oneDay * 16) {\n            plotTimes(timeOnLeftEdge, 16, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n          } else if (minimumInterval > oneDay * 8) {\n            plotTimes(timeOnLeftEdge, 8, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n          } else if (minimumInterval > oneDay * 4) {\n            plotTimes(timeOnLeftEdge, 4, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n          } else if (minimumInterval > oneDay * 2) {\n            plotTimes(timeOnLeftEdge, 2, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n          } else {\n            plotTimes(timeOnLeftEdge, 1, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n          }\n        }\n      });\n      this.network.on(\"blurNode\", function (params) {\n        _this5.network.canvas.body.container.style.cursor = 'default';\n\n        var node = _this5.nodeDataSet.get(params.node);\n\n        if (node && node.url) {\n          _this5.nodeDataSet.update({\n            id: params.node,\n            color: null\n          });\n        }\n      });\n\n      if (!Blitzboard.fondLoaded && document.fonts) {\n        Blitzboard.fondLoaded = true;\n\n        var _blitzboard = this; // Decent browsers: Make sure the fonts are loaded.\n\n\n        document.fonts.load('normal normal 400 24px/1 \"FontAwesome\"').catch(console.error.bind(console, \"Failed to load Font Awesome 4.\")).then(function () {\n          _blitzboard.network.redraw();\n        }).catch(console.error.bind(console, \"Failed to render the network with Font Awesome 4.\"));\n      }\n\n      function clickHandler(e) {\n        blitzboard.doubleClickTimer = null;\n\n        if (e.nodes.length > 0) {\n          if (blitzboard.config.node.onClick) {\n            blitzboard.config.node.onClick(blitzboard.getNode(e.nodes[0]));\n          }\n        } else if (e.edges.length > 0) {\n          if (blitzboard.config.edge.onClick) {\n            blitzboard.config.edge.onClick(blitzboard.getEdge(e.edges[0]));\n          }\n        }\n      }\n\n      this.network.on(\"click\", function (e) {\n        if (!_this5.doubleClickTimer) {\n          if (_this5.config.doubleClickWait <= 0) {\n            clickHandler(e);\n          } else {\n            _this5.doubleClickTimer = setTimeout(function () {\n              return clickHandler(e);\n            }, _this5.config.doubleClickWait);\n          }\n        }\n      });\n      this.network.on(\"doubleClick\", function (e) {\n        clearTimeout(_this5.doubleClickTimer);\n        _this5.doubleClickTimer = null;\n\n        if (e.nodes.length > 0) {\n          if (_this5.config.node.onDoubleClick) {\n            _this5.config.node.onDoubleClick(_this5.getNode(e.nodes[0]));\n          }\n        } else if (e.edges.length > 0) {\n          if (_this5.config.edge.onDoubleClick) {\n            _this5.config.edge.onDoubleClick(_this5.getEdge(e.edges[0]));\n          }\n        }\n      });\n    }\n  }, {\n    key: \"scrollNodeIntoView\",\n    value: function scrollNodeIntoView(node) {\n      var select = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (typeof node === 'string') node = this.nodeMap[node];\n      if (!node) return;\n\n      if (this.config.layout === 'map') {\n        this.scrollMapToNode(this.nodeMap[node.id]);\n      } else {\n        this.scrollNetworkToPosition(this.network.getPosition(node.id));\n      }\n\n      if (select) this.network.selectNodes([node.id]);\n\n      var _iterator12 = _createForOfIteratorHelper(this.onNodeFocused),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var callback = _step12.value;\n          // TODO: The argument should be proxy instead of plain objects\n          callback(node);\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }, {\n    key: \"scrollNetworkToPosition\",\n    value: function scrollNetworkToPosition(position) {\n      var _this6 = this;\n\n      clearTimeout(this.scrollAnimationTimerId);\n      this.scrollAnimationTimerId = setTimeout(function () {\n        var animationOption = {\n          scale: 1.0,\n          animation: {\n            duration: 500,\n            easingFuntcion: \"easeInOutQuad\"\n          }\n        };\n\n        _this6.network.moveTo(_objectSpread(_objectSpread({}, {\n          position: position\n        }), animationOption));\n      }, 200); // Set delay to avoid calling moveTo() too much (seem to cause some bug on animation)\n    }\n  }, {\n    key: \"updateNodeLocationOnMap\",\n    value: function updateNodeLocationOnMap() {\n      var _this7 = this;\n\n      var nodePositions = [];\n      var lngKey = this.config.layoutSettings.lng;\n      var latKey = this.config.layoutSettings.lat;\n      this.graph.nodes.forEach(function (node) {\n        if (node.properties[latKey] && node.properties[lngKey]) {\n          var point = _this7.map.latLngToContainerPoint([node.properties[latKey][0], node.properties[lngKey][0]]);\n\n          point = _this7.network.DOMtoCanvas(point);\n          nodePositions.push({\n            id: node.id,\n            x: point.x,\n            y: point.y,\n            fixed: true\n          });\n        }\n      });\n      this.nodeDataSet.update(nodePositions);\n    }\n  }, {\n    key: \"updateNodeLocationOnTimeLine\",\n    value: function updateNodeLocationOnTimeLine() {\n      var _this8 = this;\n\n      var nodePositions = [];\n      this.graph.nodes.forEach(function (node) {\n        var x, y, fixed, width;\n\n        var _this8$calcNodePositi = _this8.calcNodePosition(node);\n\n        x = _this8$calcNodePositi.x;\n        y = _this8$calcNodePositi.y;\n        fixed = _this8$calcNodePositi.fixed;\n        width = _this8$calcNodePositi.width;\n        nodePositions.push({\n          id: node.id,\n          x: x,\n          y: y\n        });\n      });\n      this.nodeDataSet.update(nodePositions);\n    }\n  }, {\n    key: \"scrollMapToNode\",\n    value: function scrollMapToNode(node) {\n      var lngKey = this.config.layoutSettings.lng;\n      var latKey = this.config.layoutSettings.lat;\n      this.map.panTo([node.properties[latKey][0], node.properties[lngKey][0]]);\n    }\n  }, {\n    key: \"scrollEdgeIntoView\",\n    value: function scrollEdgeIntoView(edge) {\n      var select = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (typeof edge === 'string') {\n        edge = this.edgeMap[edge];\n      }\n\n      if (this.config.layout === 'map') {\n        this.scrollMapToNode(this.nodeMap[edge.from]);\n      } else {\n        var from = this.network.getPosition(edge.from);\n        var to = this.network.getPosition(edge.to);\n        this.scrollNetworkToPosition({\n          x: (from.x + to.x) / 2,\n          y: (from.y + to.y) / 2\n        });\n      }\n\n      if (select) {\n        blitzboard.network.selectEdges([edge.id]);\n      }\n\n      var _iterator13 = _createForOfIteratorHelper(this.onEdgeFocused),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var callback = _step13.value;\n          // TODO: The argument should be proxy instead of plain objects\n          callback(edge);\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    }\n  }, {\n    key: \"showLoader\",\n    value: function showLoader() {\n      var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Now loading...\";\n      this.screen.style.display = 'flex';\n      this.screenText.innerText = text;\n      this.screenText.style.display = text ? 'block' : 'none';\n    }\n  }, {\n    key: \"hideLoader\",\n    value: function hideLoader() {\n      this.screen.style.display = 'none';\n    }\n  }]);\n\n  return Blitzboard;\n}();\n\n_defineProperty(Blitzboard, \"fondLoaded\", false);\n\n_defineProperty(Blitzboard, \"defaultConfig\", {\n  doubleClickWait: 200,\n  node: {\n    caption: ['id'],\n    defaultIcon: true,\n    thumbnail: 'thumbnail',\n    saturation: '100%',\n    brightness: '37%'\n  },\n  edge: {\n    caption: ['label'],\n    length: {\n      distance: 'value'\n    },\n    width: {\n      flow: 'throughput'\n    },\n    saturation: '0%',\n    brightness: '62%'\n  },\n  zoom: {\n    max: 3.0,\n    min: 0.25\n  },\n  layoutSettings: {\n    time_from: 'from',\n    time_to: 'to',\n    lng: 'lng',\n    lat: 'lat'\n  },\n  extraOptions: {}\n});\n\n_defineProperty(Blitzboard, \"iconPrefixes\", ['fa-solid:', 'ion:', 'bx:bx-', 'gridicons:', 'akar-icons:']);\n\n_defineProperty(Blitzboard, \"iconSizeCoef\", 1.5);\n\n_defineProperty(Blitzboard, \"minScaleOnMap\", 0.3);\n\n_defineProperty(Blitzboard, \"maxScaleOnMap\", 1.0);\n\n_defineProperty(Blitzboard, \"mapContainerId\", 'map');\n\n_defineProperty(Blitzboard, \"nodeTemplate\", {\n  id: null,\n  labels: [],\n  properties: {}\n});\n\n_defineProperty(Blitzboard, \"edgeTemplate\", {\n  from: null,\n  to: null,\n  direction: '->',\n  labels: [],\n  properties: {}\n});\n\n_defineProperty(Blitzboard, \"loadedIcons\", {});\n\n_defineProperty(Blitzboard, \"renderedColors\", {});\n\n_defineProperty(Blitzboard, \"blitzProxy\", {\n  get: function get(target, prop, receiver) {\n    if (prop === 'label') {\n      return target.labels[0];\n    }\n\n    if (!(prop in target) && prop in target.properties) {\n      return target.properties[prop][0];\n    }\n\n    return Reflect.get(target, prop, receiver);\n  }\n});\n\nexport { Blitzboard as default };\nvar markers = [];\nvar nodeProps, edgeProps;\n\nfunction arrayEquals(a, b) {\n  return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every(function (val, index) {\n    return val === b[index];\n  });\n}\n\nfunction nodeEquals(node1, node2) {\n  if (node1.id != node2.id || !arrayEquals(node1.labels, node2.labels)) {\n    return false;\n  }\n\n  var node1Keys = Object.keys(node1.properties);\n  var node2Keys = Object.keys(node2.properties);\n\n  if (node1Keys.length != node2Keys.length) {\n    return false;\n  }\n\n  for (var _i4 = 0, _node1Keys = node1Keys; _i4 < _node1Keys.length; _i4++) {\n    var key = _node1Keys[_i4];\n    if (!arrayEquals(node1.properties[key], node2.properties[key])) return false;\n  }\n\n  return true;\n}\n\nfunction deepMerge(target, source) {\n  var isObject = function isObject(obj) {\n    return obj && _typeof(obj) === 'object' && !Array.isArray(obj);\n  };\n\n  var result = Object.assign({}, target);\n\n  if (isObject(target) && isObject(source)) {\n    for (var _i5 = 0, _Object$entries = Object.entries(source); _i5 < _Object$entries.length; _i5++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i5], 2),\n          sourceKey = _Object$entries$_i[0],\n          sourceValue = _Object$entries$_i[1];\n\n      var targetValue = target[sourceKey];\n\n      if (isObject(sourceValue) && target.hasOwnProperty(sourceKey)) {\n        result[sourceKey] = deepMerge(targetValue, sourceValue);\n      } else {\n        Object.assign(result, _defineProperty({}, sourceKey, sourceValue));\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction retrieveHttpUrl(node) {\n  var candidates = [];\n\n  for (var _i6 = 0, _Object$entries2 = Object.entries(node.properties); _i6 < _Object$entries2.length; _i6++) {\n    var entry = _Object$entries2[_i6];\n\n    var _iterator14 = _createForOfIteratorHelper(entry[1]),\n        _step14;\n\n    try {\n      for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n        var prop = _step14.value;\n\n        if (typeof prop === 'string' && (prop.startsWith(\"https://\") || prop.startsWith(\"http://\"))) {\n          if (entry[0].toLowerCase() == 'url') return prop;\n          candidates.push([entry[0], prop]);\n        }\n      }\n    } catch (err) {\n      _iterator14.e(err);\n    } finally {\n      _iterator14.f();\n    }\n  }\n\n  return candidates[0];\n}\n\nfunction toNodePairString(pgEdge) {\n  return \"\".concat(pgEdge.from, \"-\").concat(pgEdge.to);\n}\n\nfunction wrapText(str, asHtml) {\n  if (!str) return str;\n  if (Array.isArray(str)) str = str[0];\n  var maxWidth = 40;\n  var newLineStr = asHtml ? \"<br>\" : \"\\n\",\n      res = '';\n\n  while (str.length > maxWidth) {\n    res += str.slice(0, maxWidth) + newLineStr;\n    str = str.slice(maxWidth);\n  }\n\n  return res + str;\n}\n\nfunction createLabelText(elem) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (props != null) {\n    // Use whitespace instead of empty string if no props are specified because Vis.js cannot update label with empty string)\n    return props.length ? props.map(function (prop) {\n      return prop === 'id' ? elem.id : prop === 'label' ? elem.labels : wrapText(elem.properties[prop]);\n    }).filter(function (val) {\n      return val;\n    }).join('\\n') : ' ';\n  }\n}\n\nfunction createTitleText(elem) {\n  var flattend_props = Object.entries(elem.properties).reduce(function (acc, prop) {\n    return acc.concat(\"<tr valign=\\\"top\\\"><td>\".concat(prop[0], \"</td><td> : \").concat(wrapText(prop[1], true), \"</td></tr>\"));\n  }, []);\n\n  if (elem.id) // for nodes\n    {\n      var idText = \"<tr><td><b>\".concat(elem.id, \"</b></td><td> : \").concat(wrapText(elem.labels.join(':'), true), \"</td></tr>\");\n      flattend_props.splice(0, 0, idText);\n    }\n\n  if (flattend_props.length === 0) {\n    return null;\n  }\n\n  return htmlTitle(\"<table style='fixed'>\".concat(flattend_props.join(''), \"</table>\"));\n} // Create random colors, with str as seed, and with fixed saturation and lightness\n\n\nfunction getRandomColor(str, saturation, brightness) {\n  var hash = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  var hue = hash % 360;\n  return 'hsl(' + hue + \", \".concat(saturation, \", \").concat(brightness, \")\");\n}\n\nfunction setSearchState(searching) {\n  var icon = q('#search-icon');\n\n  if (searching) {\n    icon.classList.remove(\"fa-search\");\n    icon.classList.add(\"fa-spinner\");\n    icon.classList.add(\"fa-spin\");\n  } else {\n    icon.classList.add(\"fa-search\");\n    icon.classList.remove(\"fa-spinner\");\n    icon.classList.remove(\"fa-spin\");\n  }\n}\n\nfunction isDateString(str) {\n  return isNaN(str) && !isNaN(Date.parse(str));\n}\n\nfunction tryPgParse(pg) {\n  var _iterator15 = _createForOfIteratorHelper(markers),\n      _step15;\n\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var marker = _step15.value;\n      marker.clear();\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n\n  markers = [];\n\n  try {\n    return pgParser.parse(pg);\n  } catch (e) {\n    console.log(e);\n    if (!e.hasOwnProperty('location')) throw e;\n    var loc = e.location; // Mark leading characters in the error line\n\n    markers.push(editor.markText({\n      line: loc.start.line - 1,\n      ch: 0\n    }, {\n      line: loc.start.line - 1,\n      ch: loc.start.column - 1\n    }, {\n      className: 'syntax-error-line',\n      message: e.message\n    }));\n    markers.push(editor.markText({\n      line: loc.start.line - 1,\n      ch: loc.start.column - 1\n    }, {\n      line: loc.end.line - 1,\n      ch: loc.end.column - 1\n    }, {\n      className: 'syntax-error',\n      message: e.message\n    })); // Mark following characters in the error line\n\n    markers.push(editor.markText({\n      line: loc.end.line - 1,\n      ch: loc.end.column - 1\n    }, {\n      line: loc.end.line - 1,\n      ch: 10000\n    }, {\n      className: 'syntax-error-line',\n      message: e.message\n    }));\n    toastr.error(e.message, 'PG SyntaxError', {\n      preventDuplicates: true\n    });\n    return null;\n  }\n}\n\nfunction htmlTitle(html) {\n  var container = document.createElement(\"div\");\n  container.innerHTML = html;\n  return container;\n}","map":{"version":3,"names":["q","document","querySelector","bind","qa","querySelectorAll","DuplicateNodeError","nodes","map","n","id","join","name","Error","Blitzboard","container","nodeColorMap","expandedNodes","nodeMap","config","node","edge","nodeLineMap","edgeMap","edgeLineMap","prevZoomPosition","warnings","style","position","networkContainer","createElement","mapContainer","minTime","Date","maxTime","prevMouseEvent","timeScale","dragging","currentLatLng","redrawTimer","onNodeAdded","onEdgeAdded","onNodeFocused","onEdgeFocused","maxLine","scrollAnimationTimerId","screen","screenText","appendChild","innerText","doubleClickTimer","blitzboard","addEventListener","e","layout","deltaY","_zoom","getMaxZoom","getMinZoom","mouseEventToLatLng","setZoomAround","animate","newScale","Math","min","maxScaleOnMap","max","minScaleOnMap","setTimeout","network","moveTo","scale","updateNodeLocationOnMap","invalidateSize","preventDefault","stopPropagation","panBy","x","y","panTo","colorStr","computed","renderedColors","a","color","colors","window","getComputedStyle","body","match","parseInt","removeChild","node_id","from","to","label","graph","edges","labels","includes","filter","getNode","Proxy","blitzProxy","edge_id","pgNode","fixed","width","timeInterval","fromProp","layoutSettings","time_from","toProp","time_to","Object","keys","properties","prop","fromPosition","getTime","toPosition","thumbnail","props","extraOptions","group","sort","getRandomColor","saturation","brightness","calcNodePosition","url","retrieveHttpUrl","thumbnailUrl","retrieveThumbnailUrl","expanded","degree","undefined","retrieveConfigProp","opacity","parseFloat","size","shape","rgb","getHexColors","attrs","createLabelText","title","createTitleText","borderWidth","font","fixedByTime","iconRegisterer","icons","length","icon","iconPrefixes","prefix","i","startsWith","iconSizeCoef","svg","Iconify","renderSVG","height","img","Image","forEach","path","fill","stroke","src","encodeURIComponent","outerHTML","loadedIcons","clearTimeout","redraw","loadIcons","code","String","fromCharCode","face","defaultIcon","lowerLabel","toLowerCase","assign","pgElem","type","propName","propConfig","substr","pgEdge","caption","edgeLabel","edgeColorMap","remoteId","hoverWidth","smooth","roundness","arrows","enabled","direction","undirected","update","addNodes","newNodes","pg","tryPgParse","includesNode","mapped","deepMerge","nodeTemplate","location","start","line","column","end","concat","callback","addEdges","newEdges","edgeTemplate","input","newPg","JSON","parse","err","SyntaxError","defaultConfig","nonuniqueNodes","nonunique","Set","add","push","message","applyDiff","nodeDataSet","edgeDataSet","nodesToDelete","newEdgeMap","existingNode","nodeEquals","remove","visNode","toVisNode","delete","toNodePairString","visEdge","toVisEdge","nodeId","edgeId","updateNodeLocationOnTimeLine","validateGraph","nodeProps","edgeProps","defaultNodeProps","defaultEdgeProps","vis","DataSet","data","randomSeed","hierarchical","options","interaction","dragNodes","dragView","zoomView","hover","physics","barnesHut","springConstant","stabilization","iterations","updateInterval","manipulation","scaleFactor","Network","display","statistics","statisticsOfMap","center","L","zoom","minZoom","zoomSnap","zoomControl","tileLayer","attribution","addTo","on","getScale","get","lngKey","lng","latKey","lat","lngSum","latSum","count","lngMax","Number","MIN_VALUE","lngMin","MAX_VALUE","latMax","latMin","log2","abs","pos","getViewPosition","canvas","cursor","onHover","plotTimes","startTime","interval","intervalUnit","timeForOnePixel","offsetX","offsetY","rightMostX","context","currentTime","getFullYear","getMonth","getDate","nextPosition","fillText","toLocaleDateString","lineTo","setFullYear","setMonth","setDate","ctx","customIcon","getPosition","drawImage","fillStyle","textAlign","textBaseline","getContext","view","translation","timeOnLeftEdge","clientWidth","rightMost","oneMonth","oneDay","twoMonth","fourMonth","oneYear","minDistance","toString","minimumInterval","params","fondLoaded","fonts","load","catch","console","error","then","clickHandler","onClick","getEdge","doubleClickWait","onDoubleClick","select","scrollMapToNode","scrollNetworkToPosition","selectNodes","animationOption","animation","duration","easingFuntcion","nodePositions","point","latLngToContainerPoint","DOMtoCanvas","selectEdges","text","distance","flow","target","receiver","Reflect","markers","arrayEquals","b","Array","isArray","every","val","index","node1","node2","node1Keys","node2Keys","key","source","isObject","obj","result","entries","sourceKey","sourceValue","targetValue","hasOwnProperty","candidates","entry","wrapText","str","asHtml","maxWidth","newLineStr","res","slice","elem","flattend_props","reduce","acc","idText","splice","htmlTitle","hash","charCodeAt","hue","setSearchState","searching","classList","isDateString","isNaN","marker","clear","pgParser","log","loc","editor","markText","ch","className","toastr","preventDuplicates","html","innerHTML"],"sources":["/Users/dankim/Programming/Code/vue-workspace/adw-graph-poc/src/plugins/blitzboard/blitzboard.js"],"sourcesContent":["'use strict';\n\nconst q = document.querySelector.bind(document);\nconst qa = document.querySelectorAll.bind(document);\n\nclass DuplicateNodeError extends Error {\n  constructor(nodes) {\n    super(`Duplicate node: ${nodes.map(n => n.id).join(', ')}`);\n    this.name = \"NodeDuplicationError\";\n    this.nodes = nodes;\n  }\n}\n\nexport default class Blitzboard {\n  static fondLoaded = false;\n  static defaultConfig = {\n    doubleClickWait: 200,\n    node: {\n      caption: ['id'],\n      defaultIcon: true,\n      thumbnail: 'thumbnail',\n      saturation: '100%',\n      brightness: '37%',\n    },\n    edge: {\n      caption: ['label'],\n      length: {\n        distance: 'value',\n      },\n      width: {\n        flow: 'throughput',\n      },\n      saturation: '0%',\n      brightness: '62%',\n    },\n    zoom: { \n      max: 3.0,\n      min: 0.25,\n    },\n    layoutSettings: {\n      time_from: 'from',\n      time_to: 'to',\n      lng: 'lng',\n      lat: 'lat'\n    },\n    extraOptions: {\n    }\n  };\n  static iconPrefixes = ['fa-solid:', 'ion:', 'bx:bx-', 'gridicons:', 'akar-icons:'];\n  static iconSizeCoef = 1.5;\n  static minScaleOnMap = 0.3;\n  static maxScaleOnMap = 1.0;\n  static mapContainerId = 'map';\n  static nodeTemplate = {\n    id: null,\n    labels: [],\n    properties: {}\n  }\n  static edgeTemplate = {\n    from: null,\n    to: null,\n    direction: '->',\n    labels: [],\n    properties: {}\n  }\n\n  static loadedIcons = {};\n  \n  static renderedColors = {};\n  \n  constructor(container) {\n    this.container = container;\n    this.nodeColorMap = {};\n    this.expandedNodes = [];\n    this.nodeMap = {};\n    this.config = { node: {}, edge: {}};\n    this.nodeLineMap = {};\n    this.edgeMap = {};\n    this.edgeLineMap = {};\n    this.prevZoomPosition = null;\n    this.warnings = [];\n    \n    this.container.style.position = 'absolute';\n    \n    this.networkContainer = document.createElement('div');\n    this.networkContainer.style = `\n      height: 100%;\n      width: 100%;\n      top: 0;\n      left: 0;\n      position: absolute;\n      z-index: 2;\n    `;\n    \n    this.mapContainer = document.createElement('div');\n    this.mapContainer.style = `\n      height: 100%;\n      width: 100%;\n      top: 0;\n      left: 0;\n      position: absolute;\n      z-index: 1;\n    `;\n    this.map = null;\n\n    this.minTime = new Date(8640000000000000);\n    this.maxTime = new Date(-8640000000000000);\n    \n    this.prevMouseEvent= null;\n    this.timeScale = 1000;\n    this.dragging = false;\n    this.currentLatLng = null;\n    this.redrawTimer = null;\n    this.onNodeAdded = [];\n    this.onEdgeAdded = [];\n    this.onNodeFocused = [];\n    this.onEdgeFocused = [];\n    this.maxLine = 0;\n    this.scrollAnimationTimerId = null;\n    this.screen = document.createElement('div');\n    this.screenText = document.createElement('div');\n    this.screenText.style = `\n      font-size: 2rem;\n      background-color: rgba(255, 255, 255, 0.5);\n      padding: 10px;\n    `;\n    this.screen.appendChild(this.screenText);\n    this.screenText.innerText = \"Now loading...\";\n    this.screen.style = `\n      background-color: rgba(0, 0, 0, 0.3);\n      z-index: 3;\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      display: none;\n      justify-content: center;\n      align-items: center;\n      font-size: 2rem;\n    `;\n    this.doubleClickTimer = null;\n    \n    let blitzboard = this;\n\n    container.appendChild(this.screen);\n    container.appendChild(this.networkContainer);\n    container.appendChild(this.mapContainer);\n\n    this.container.addEventListener('wheel', (e) => {\n      if(blitzboard.config.layout === 'map')\n      {\n        if((e.deltaY < 0 && blitzboard.map._zoom < blitzboard.map.getMaxZoom()) ||\n          (e.deltaY > 0 && blitzboard.map._zoom > blitzboard.map.getMinZoom()) ) {\n          if(!blitzboard.currentLatLng) {\n            blitzboard.currentLatLng = blitzboard.map.mouseEventToLatLng(e);\n          }\n          blitzboard.map.setZoomAround(blitzboard.currentLatLng, blitzboard.map._zoom - e.deltaY * 0.03, {animate: false});\n        }\n        let newScale = blitzboard.map._zoom / 12 + 0.4;\n        newScale = Math.min(Blitzboard.maxScaleOnMap, Math.max(newScale, Blitzboard.minScaleOnMap));\n        setTimeout( () => {\n          blitzboard.network.moveTo({scale: newScale});\n          blitzboard.updateNodeLocationOnMap();\n        }, 10);\n        blitzboard.map.invalidateSize();\n        e.preventDefault();\n        e.stopPropagation(); // Inhibit zoom on vis-network\n      }\n    }, true);\n\n    this.container.addEventListener('mouseout', (e) => {\n      blitzboard.prevMouseEvent = null;\n      blitzboard.dragging = false;\n    }, true);\n\n    this.container.addEventListener('mouseup', (e) => {\n      blitzboard.dragging = false;\n      blitzboard.prevMouseEvent = null;\n    }, true);\n\n    this.container.addEventListener('mousemove', (e) => {\n      if(blitzboard.dragging && blitzboard.config.layout === 'map' && blitzboard.prevMouseEvent) {\n        blitzboard.map.panBy([blitzboard.prevMouseEvent.x - e.x, blitzboard.prevMouseEvent.y - e.y], {animate: false});\n      }\n      blitzboard.prevMouseEvent = e;\n      blitzboard.currentLatLng = null;\n    }, true);\n\n    this.container.addEventListener('dblclick', (e) => {\n      if(blitzboard.config.layout === 'map') {\n        blitzboard.map.panTo(blitzboard.map.mouseEventToLatLng(e));\n      }\n    }, true);\n\n    this.container.addEventListener('mousedown', (e) => {\n      blitzboard.dragging = true;\n      blitzboard.prevMouseEvent = e;\n    }, true);\n  }\n\n  static blitzProxy = {\n    get: function(target, prop, receiver) {\n      if (prop === 'label') {\n        return target.labels[0];\n      }\n      if (!(prop in target) && prop in target.properties) {\n        return target.properties[prop][0]; \n      }\n      return Reflect.get(target, prop, receiver);\n    }\n  }\n\n  getHexColors(colorStr) {\n    let computed = Blitzboard.renderedColors[colorStr];\n    if(computed) {\n      return computed;\n    }\n    let a = document.createElement('div');\n    a.style.color = colorStr;\n    let colors = window.getComputedStyle( document.body.appendChild(a) ).color.match(/\\d+/g).map(function(a){ return parseInt(a,10); });\n    document.body.removeChild(a);\n    Blitzboard.renderedColors[colorStr] = colors;\n    return colors;\n  }\n  \n  hasNode(node_id) {\n    return !!this.nodeMap[node_id];\n  }\n  \n  hasEdge(from, to, label = null) {\n    for(let edge of this.graph.edges) {\n      if(edge.from === from && edge.to === to && (!label || edge.labels.includes(label)))\n        return true;\n    }\n    return false;\n  }\n  \n  getAllNodes(label = null) {\n    if(label)\n      return this.graph.nodes.filter(node => node.labels.includes(label)).map(node => this.getNode(node.id));\n    else\n      return this.graph.nodes.map(node => this.getNode(node.id));\n  }\n\n  getNode(node_id) {\n    return new Proxy(this.nodeMap[node_id], Blitzboard.blitzProxy);\n  }\n  \n  getEdge(edge_id) {\n    return new Proxy(this.edgeMap[edge_id], Blitzboard.blitzProxy);\n  }\n  \n  calcNodePosition(pgNode) {\n    let x, y, fixed, width;\n    if(this.config.layout === 'timeline' && this.timeInterval > 0) {\n      x = null;\n      fixed = false;\n      let fromProp = this.config.layoutSettings.time_from;\n      let toProp = this.config.layoutSettings.time_to;\n      let from = this.maxTime;\n      let to = this.minTime;\n\n      for (let prop of Object.keys(pgNode.properties)) {\n        if (prop === fromProp || prop === toProp) {\n          from = new Date(Math.min(from, new Date(pgNode.properties[prop][0])));\n          to = new Date(Math.max(to, new Date(pgNode.properties[prop][0])));\n        }\n      }\n    \n      if(from <= to) {\n        fixed = true;\n        let fromPosition = this.timeScale * (from.getTime() - this.minTime.getTime()) * 1.0 / this.timeInterval - this.timeScale * 0.5;\n        let toPosition = this.timeScale * (to.getTime() - this.minTime.getTime()) * 1.0 / this.timeInterval - this.timeScale * 0.5;\n        x = (fromPosition + toPosition) / 2;\n        if(from === to) {\n          width = fromPosition - toPosition;\n        } else {\n          width = 25;\n        }\n      } else {\n        x = 0;\n      }\n    }\n    else {\n      if(this.config.layout == 'custom') {\n        if (pgNode.properties[this.config.layoutSettings.x] || pgNode.properties[this.config.layoutSettings.y]) {\n          x = parseInt(pgNode.properties[this.config.layoutSettings.x][0]);\n          y = parseInt(pgNode.properties[this.config.layoutSettings.y][0]);\n          fixed = true;\n        }\n      } else {\n        x = null;\n        y = null;\n        fixed = this.config.layout === 'hierarchical';\n        width = null;\n      }\n    }\n    \n    return {x, y, fixed, width};\n  }\n\n  retrieveThumbnailUrl(node) {\n    if(this.config.node.thumbnail) {\n      return node.properties[this.config.node.thumbnail]?.[0];\n    }\n    return null;\n  }\n\n  toVisNode(pgNode, props, extraOptions = null) {\n    const group = [...pgNode.labels].sort().join('_');\n    if(!this.nodeColorMap[group]) {\n      this.nodeColorMap[group] = getRandomColor(group, this.config.node.saturation, this.config.node.brightness);\n    }\n    \n    let x, y, fixed, width;\n    ({x, y, fixed, width} = this.calcNodePosition(pgNode));\n\n    let url = retrieveHttpUrl(pgNode);\n    let thumbnailUrl = this.retrieveThumbnailUrl(pgNode);\n    let expanded = this.expandedNodes.includes(pgNode.id);\n\n    let degree =  pgNode.properties['degree'];\n    let blitzboard = this;\n    if(degree !== undefined) {\n      degree = degree[0];\n    } else {\n      degree = 2; // assume degree to be two (default)\n    }\n    \n    let color = this.retrieveConfigProp(pgNode, 'node', 'color');\n    let opacity = parseFloat(this.retrieveConfigProp(pgNode, 'node', 'opacity'));\n    let size = parseFloat(this.retrieveConfigProp(pgNode, 'node', 'size'));\n    let shape = this.retrieveConfigProp(pgNode, 'node', 'shape');\n    \n    color = color || this.nodeColorMap[group];\n    \n    if(opacity < 1) {\n      let rgb = this.getHexColors(color);\n      color = `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, ${opacity})`;\n    }\n\n    let attrs = {\n      id: pgNode.id,\n      color: color,\n      label: createLabelText(pgNode, props),\n      shape: shape || 'dot',\n      size: size || 25,\n      degree: degree,\n      title: createTitleText(pgNode),\n      fixed: {\n        x: fixed,\n        y: this.config.layout === 'timeline' ? false : fixed\n      },\n      borderWidth: url ? 3 : 1,\n      url: url,\n      x: x,\n      y: y,\n      font: {\n        color: url ? 'blue' : 'black'\n      },\n      fixedByTime: fixed\n    };\n    \n    function iconRegisterer(name) {\n      return (icons) => {\n        if (icons.length > 0) {\n          let icon = null;\n          if(icons.length > 1) {\n            // Find icon with the highest priority \n            for (let prefix of Blitzboard.iconPrefixes) {\n              for (let i of icons) {\n                if (`${i.prefix}:${i.name}`.startsWith(prefix)) {\n                  icon = i; \n                  break;\n                }\n              }\n              if (icon) {\n                break;\n              }\n            }\n          }\n          icon = icon || icons[0];\n          let size = attrs.size * Blitzboard.iconSizeCoef;\n          let svg = Iconify.renderSVG(`${icon.prefix}:${icon.name}`, {\n            width: size,\n            height: size\n          });\n          let img = new Image();\n          // svg.viewBox.baseVal.width = size;\n          // svg.viewBox.baseVal.height = size;\n          svg.querySelectorAll(\"path\").forEach((path) => {\n            path.style.fill = \"white\";\n            path.style.stroke = \"white\";\n          });\n          img.src = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg.outerHTML);\n          Blitzboard.loadedIcons[name] = img;\n          if(blitzboard) {\n            if (blitzboard.redrawTimer) {\n              clearTimeout(blitzboard.redrawTimer);\n            }\n            blitzboard.redrawTimer = setTimeout(() => {  // Add delay to avoid redraw too ofen\n              blitzboard.network.redraw();\n            }, 1000);\n          }\n        }\n      };\n    }\n\n    for(let label of pgNode.labels) {\n      let icon;\n      if (icon = this.config.node.icon?.[label]) {\n        if(icon.includes(':')) { // For icons in iconify\n          Iconify.loadIcons([icon], iconRegisterer(icon));\n          attrs['customIcon'] = {\n            name: icon\n          };\n        } else { // For icon codes in Ionicons (to be backward compatible)\n          let code = String.fromCharCode(parseInt(icon, 16));\n          attrs['customIcon'] = {\n            face: 'Ionicons',\n            size: attrs.size * 1.5,\n            code: code,\n            color: 'white'\n          };\n          break;\n        }\n      }\n    }\n\n\n    if(!attrs['customIcon'] && this.config.node.defaultIcon) {\n      for(let label of pgNode.labels) {\n        let lowerLabel = label.toLowerCase();\n        if (!Blitzboard.loadedIcons[lowerLabel]) {\n          Blitzboard.loadedIcons[lowerLabel] = 'retrieving...'; // Just a placeholder to avoid duplicate fetching\n          Iconify.loadIcons(\n            Blitzboard.iconPrefixes.map((prefix) => prefix + lowerLabel),\n            iconRegisterer(lowerLabel)\n          );\n        }\n      }\n    }\n    \n\n    if(thumbnailUrl) {\n      attrs['shape'] = 'image';\n      attrs['image'] = thumbnailUrl;\n    }\n    attrs = Object.assign(attrs, extraOptions);\n    return attrs;\n  }\n  \n  retrieveConfigProp(pgElem, type, propName) {\n    const labels = pgElem.labels.join('_');\n    let propConfig = this.config?.[type][propName];\n    if((typeof propConfig) === 'function') {\n      return propConfig(new Proxy(pgElem, Blitzboard.blitzProxy));\n    } else if((typeof propConfig) === 'object') {\n      return pgElem.properties[this.config?.[type][propName][labels]]?.[0];\n    } else if((typeof propConfig) === 'string' && propConfig.startsWith('@')) {\n      return pgElem.properties[propConfig.substr(1)]?.[0];\n    }\n    return propConfig; // return as constant\n  }\n\n  toVisEdge(pgEdge, props = this.config.edge.caption, id) {\n    const edgeLabel = pgEdge.labels.join('_');\n    if (!this.edgeColorMap[edgeLabel]) {\n      this.edgeColorMap[edgeLabel] = getRandomColor(edgeLabel, this.config.edge.saturation || '0%', this.config.edge.brightness || '30%');\n    }\n    let length = this.retrieveConfigProp(pgEdge, 'edge','length');\n    let width = parseFloat(this.retrieveConfigProp(pgEdge, 'edge','width')) || 1;\n    let color = this.retrieveConfigProp(pgEdge, 'edge', 'color');\n    let opacity = parseFloat(this.retrieveConfigProp(pgEdge, 'edge', 'opacity')) || 1;\n    \n    color = color || this.edgeColorMap[edgeLabel];\n\n    if(opacity < 1) {\n      let rgb = this.getHexColors(color);\n      color = `rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, ${opacity})`;\n    }\n    \n    return {\n      id: id,\n      from: pgEdge.from,\n      to: pgEdge.to,\n      color: color,\n      label: createLabelText(pgEdge, props),\n      title: createTitleText(pgEdge),\n      remoteId: id,\n      length: length,\n      width: width,\n      hoverWidth: 0.5,\n      smooth: this.map ? false : { roundness: 1 },\n      arrows: {\n        to: {\n          enabled: pgEdge.direction == '->' || pgEdge.undirected === 'false'\n        },\n      }\n    }\n  }\n  \n  includesNode(node) {\n    return this.graph.nodes.filter(e => e.id === node.id).length > 0;\n  }\n  \n  addNode(node, update = true) {\n    this.addNodes([node], update);\n  }\n  \n  addNodes(nodes, update = true) {\n    let newNodes;\n    if (typeof nodes === 'string' || nodes instanceof String) {\n      let pg = tryPgParse(nodes);\n      newNodes = pg.nodes;\n    } else {\n      newNodes = nodes;\n    }\n    newNodes = newNodes.filter(node => !this.includesNode(node)).map((node) => {\n      let mapped = deepMerge(Blitzboard.nodeTemplate, node);\n      ++this.maxLine;\n      mapped.location = {\n        start: {\n          line: this.maxLine,\n          column: 0,\n        },\n        end: {\n          line: this.maxLine + 1,\n          column: 0,\n        }\n      }\n      return mapped;\n    });\n    this.graph.nodes = this.graph.nodes.concat(newNodes);\n    for(let callback of this.onNodeAdded) {\n      // TODO: The argument should be proxy instead of plain objects\n      callback(newNodes);\n    }\n    if(update)\n      this.update();\n  }\n  \n  addEdge(edge, update = true) {\n    this.addEdges([edge], update);\n  }\n\n  addEdges(edges, update = true) {\n    let newEdges;\n    if (typeof edges === 'string' || edges instanceof String) {\n      let pg = tryPgParse(edges);\n      newEdges = pg.edges\n    } else {\n      newEdges = edges\n    }\n    newEdges = newEdges.map((edge) => {\n      let mapped = deepMerge(Blitzboard.edgeTemplate, edge);\n      ++this.maxLine;\n      mapped.location = {\n        start: {\n          line: this.maxLine,\n          column: 0, \n        },\n        end: {\n          line: this.maxLine + 1,\n          column: 0,\n        }\n      }\n      return mapped;\n    });\n    this.graph.edges = this.graph.edges.concat(newEdges);\n    for(let callback of this.onEdgeAdded) {\n      // TODO: The argument should be proxy instead of plain objects\n      callback(newEdges);\n    }\n    if(update)\n      this.update();\n  }\n\n\n  setGraph(input, update = true) {\n    this.nodeColorMap = {};\n    this.edgeColorMap = {};\n    this.prevMouseEvent = null;\n    this.dragging = false;\n    let newPg;\n    if (typeof input === 'string' || input instanceof String) {\n      try {\n        newPg = JSON.parse(input);\n      } catch (err) {\n        if (err instanceof SyntaxError)\n          newPg = tryPgParse(input);\n        else\n          throw err;\n      }\n    } else {\n      newPg = input;\n    }\n    if (newPg === null || newPg === undefined)\n      return;\n    this.graph = newPg;\n\n    if(update)\n      this.update();\n  }\n\n\n\n  setConfig(config, update = true) {\n    this.config = deepMerge(Blitzboard.defaultConfig, config);\n    if(config.layout === 'hierarchical') {\n      // Remove redundant settings when layout is hierarchical\n      this.config.layoutSettings = config.layoutSettings;\n    }\n    if(update)\n      this.update(false);\n  }\n  \n  validateGraph() {\n    // If duplication of nodes exist, raise error \n    function nonuniqueNodes(nodes) {\n      let nonunique = new Set();\n      let nodeMap = {} // id -> node\n      for(let node of nodes) {\n        if(nodeMap[node.id]) {\n          nonunique.add(nodeMap[node.id]);\n          nonunique.add(node);\n        }\n        nodeMap[node.id] = node;\n      }\n      return [...nonunique];\n    }\n\n    let nonunique = nonuniqueNodes(this.graph.nodes);\n    if(nonunique.length > 0) {\n      throw new DuplicateNodeError(nonunique);\n    }\n\n    // If edge refers to undefined nodes, create warnings\n    for(let edge of this.graph.edges) {\n      if(!this.nodeMap[edge.from]) {\n        this.warnings.push({\n          location: edge.location,\n          message: `Source node is undefined: ${edge.from}`\n        });\n      }\n      if(!this.nodeMap[edge.to]) {\n        this.warnings.push({\n          location: edge.location,\n          message: `Target node is undefined: ${edge.to}`\n        });\n      }\n    }\n  }\n  \n  update(applyDiff = true) {\n    let blitzboard = this;\n    this.warnings = [];\n    applyDiff = applyDiff && this.nodeDataSet && this.edgeDataSet;\n    if(applyDiff) {\n      let nodesToDelete = new Set(Object.keys(this.nodeMap));\n      let newEdgeMap = {};\n\n      this.nodeLineMap = {};\n      this.edgeLineMap = {};\n      this.maxLine = 0;\n      this.graph.nodes.forEach(node => {\n        let existingNode = this.nodeMap[node.id];\n        if(existingNode) {\n          if(!nodeEquals(node, existingNode)) {\n            this.nodeDataSet.remove(existingNode);\n            let visNode = this.toVisNode(node, this.config.node.caption);\n            this.nodeDataSet.update(visNode);\n          }\n        } else {\n          let visNode = this.toVisNode(node, this.config.node.caption);\n          this.nodeDataSet.add(visNode);\n        }\n        this.nodeMap[node.id] = node;\n        nodesToDelete.delete(node.id);\n        if(node.location) {\n          for (let i = node.location.start.line; i <= node.location.end.line; i++) {\n            if (i < node.location.end.line || node.location.end.column > 1)\n              this.nodeLineMap[i] = node;\n          }\n          this.maxLine = Math.max(this.maxLine, node.location.end.line);\n        }\n      });\n\n      this.graph.edges.forEach(edge => {\n        let id = toNodePairString(edge);\n        while(newEdgeMap[id]) {\n          id += '_';\n        }\n        edge.id = id;\n        newEdgeMap[id] = edge;\n        let visEdge = this.toVisEdge(edge, this.config.edge.caption, id);\n        this.edgeDataSet.update(visEdge);\n        if(edge.location) {\n          for (let i = edge.location.start.line; i <= edge.location.end.line; i++) {\n            if (i < edge.location.end.line || edge.location.end.column > 1)\n              this.edgeLineMap[i] = visEdge;\n          }\n        }\n        this.maxLine = Math.max(this.maxLine, edge.location.end.line);\n      });\n\n      nodesToDelete.forEach((nodeId) => {\n        this.nodeDataSet.remove(this.nodeMap[nodeId]);\n        delete this.nodeMap[nodeId];\n      });\n\n      for(let edgeId of Object.keys(this.edgeMap)) {\n        if(!newEdgeMap[edgeId]) {\n          this.edgeDataSet.remove(edgeId);\n        }\n      }\n      this.edgeMap = newEdgeMap;\n      if(this.map) {\n        blitzboard.updateNodeLocationOnMap();\n      }\n      if(this.config.layout === 'timeline') {\n        blitzboard.updateNodeLocationOnTimeLine();\n      }\n    }\n    \n    this.prevZoomPosition = null;\n    \n    this.minTime = new Date(8640000000000000);\n    this.maxTime = new Date(-8640000000000000);\n    \n    if(this.config.layout === 'timeline') {\n      let fromProp = this.config.layoutSettings.time_from;\n      let toProp = this.config.layoutSettings.time_to;\n      \n      this.graph.nodes.forEach(node => {\n        for (let prop of Object.keys(node.properties)) {\n          if (prop === fromProp || prop === toProp) {\n            this.minTime = new Date(Math.min(this.minTime, new Date(node.properties[prop][0])));\n            this.maxTime = new Date(Math.max(this.maxTime, new Date(node.properties[prop][0])));\n          }\n        }\n      });\n      this.timeInterval = this.maxTime - this.minTime;\n    }\n\n\n    if(applyDiff) {\n      this.validateGraph();\n      return;\n    }\n\n    this.nodeProps = new Set(['id', 'label']);\n    this.edgeProps = new Set(['label']);\n    this.graph.nodes.forEach((node) => {\n      this.nodeMap[node.id] = node;\n      if(node.location) {\n        for (let i = node.location.start.line; i <= node.location.end.line; i++)\n          if (i < node.location.end.line || node.location.end.column > 1)\n            this.nodeLineMap[i] = node;\n      }\n      Object.keys(node.properties).filter((prop) => prop != 'degree').forEach(this.nodeProps.add, this.nodeProps);\n    });\n    this.graph.edges.forEach((edge) => {\n      Object.keys(edge.properties).forEach(this.edgeProps.add, this.edgeProps);\n    });\n\n    this.validateGraph();\n\n\n    let defaultNodeProps = this.config.node.caption;\n    let defaultEdgeProps = this.config.edge.caption;\n\n    this.nodeDataSet = new vis.DataSet();\n    this.nodeDataSet.add(this.graph.nodes.map((node) => {\n      return this.toVisNode(node, defaultNodeProps);\n    }));\n    \n    this.edgeMap = {};\n    this.edgeDataSet = new vis.DataSet(this.graph.edges.map((edge) => {\n      let id = toNodePairString(edge);\n      while(this.edgeMap[id]) {\n        id += '_';\n      }\n      let visEdge = this.toVisEdge(edge, defaultEdgeProps, id);\n      this.edgeMap[visEdge.id] = edge;\n      if(edge.location) {\n        for (let i = edge.location.start.line; i <= edge.location.end.line; i++)\n          if (i < edge.location.end.line || edge.location.end.column > 1)\n            this.edgeLineMap[i] = visEdge;\n      }\n\n      return visEdge;\n    }));\n\n\n\n    // create a network\n    let data = {\n      nodes: this.nodeDataSet,\n      edges: this.edgeDataSet\n    };\n\n    let layout = {\n      randomSeed: 1\n    };\n\n    if(this.config.layout === 'hierarchical') {\n      layout.hierarchical = this.config.layoutSettings;\n    } else {\n      layout.hierarchical = false;\n    }\n\n    this.options = {\n      layout:\n        layout,\n      interaction: {\n        dragNodes: this.config.layout !== 'map',\n        dragView: this.config.layout !== 'map',\n        zoomView: this.config.layout !== 'map',\n        hover: true,\n      },\n      physics: {\n        enabled: this.config.layout !== 'map' && this.config.layout !== 'hierarchical',\n        barnesHut: {\n          springConstant:  this.config.layout === 'timeline' ? 0.004 : 0.016\n        },\n        stabilization: {\n          enabled: false,\n          iterations: 200,\n          updateInterval: 25\n        }\n      },\n      manipulation: false,\n\n      edges: {\n        arrows: {\n          to: {\n            enabled: true,\n            scaleFactor: 0.3,\n            type: \"arrow\"\n          },\n        },\n      },\n    };\n\n    this.options = Object.assign(this.options, this.config.extraOptions);\n    this.network = new vis.Network(this.networkContainer, data, this.options);\n\n    if(this.config.layout === 'map') {\n      this.mapContainer.style.display = 'block';\n      let statistics = statisticsOfMap();\n      let center = this.config?.layoutSettings?.center || statistics.center;\n      if(this.map) {\n        this.map.panTo(center);\n      } else {\n        this.map = L.map(this.mapContainer, {\n          center: center,\n          zoom: statistics.scale,\n          minZoom: 3,\n          zoomSnap: 0.01,\n          zoomControl: false,\n        });\n        var tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '© <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>',\n        });\n        tileLayer.addTo(this.map);\n\n        this.map.on('move', () => blitzboard.updateNodeLocationOnMap());\n        this.map.on('zoom', () => blitzboard.updateNodeLocationOnMap());\n      }\n      blitzboard.network.moveTo({scale: 1.0});\n    } else {\n      this.mapContainer.style.display = 'none';\n      if(this.map) {\n        this.map.remove();\n      }\n      this.map = null;\n    }\n\n\n    this.network.on('resize', (e) => {\n      if(blitzboard.config.layout === 'map') {\n        // Fix scale to 1.0 (delay is needed to override scale set by vis-network)  \n        let newScale = Math.min(Blitzboard.maxScaleOnMap, Math.max(blitzboard.network.getScale(), Blitzboard.minScaleOnMap));\n        setTimeout( () => {\n          blitzboard.network.moveTo({scale: newScale});\n          blitzboard.updateNodeLocationOnMap();\n        }, 10); \n        blitzboard.map.invalidateSize();\n      }\n    });\n    \n\n    this.network.on('dragStart', (e) => {\n      const node = this.nodeDataSet.get(e.nodes[0]);\n      if(e.nodes.length > 0) {\n        this.nodeDataSet.update({\n          id: e.nodes[0],\n          fixed: node.fixedByTime ? {x: true, y: true } : false\n        });\n      }\n    });\n    \n\n    function statisticsOfMap() {\n      let lngKey =  blitzboard.config.layoutSettings.lng;\n      let latKey =  blitzboard.config.layoutSettings.lat;\n      let lngSum = 0, latSum = 0, count = 0,\n        lngMax = Number.MIN_VALUE, lngMin = Number.MAX_VALUE,\n        latMax = Number.MIN_VALUE, latMin = Number.MAX_VALUE;\n      blitzboard.graph.nodes.forEach(node => {\n        if(node.properties[latKey] && node.properties[lngKey]) {\n          let lng = parseFloat(node.properties[lngKey][0]);\n          let lat = parseFloat(node.properties[latKey][0]);\n          lngSum += lng;\n          latSum += lat;\n          lngMax = Math.max(lng, lngMax);\n          lngMin = Math.min(lng, lngMin);\n          latMax = Math.max(lat, latMax);\n          latMin = Math.min(lat, latMin);\n          ++count;\n        }\n      });\n      if(count === 0)\n        return [0, 0];\n      return {\n        center: [latSum / count, lngSum / count],\n        scale: Math.max( -Math.log2(Math.max(Math.abs(lngMax - lngMin), Math.abs(latMax - latMin)) / 1000), 0)\n      };\n    }\n\n    \n    this.network.on(\"zoom\", function(){\n      let pos = blitzboard.network.getViewPosition();\n      if(blitzboard.config.zoom?.min && blitzboard.network.getScale() < blitzboard.config.zoom.min)\n      {\n        blitzboard.network.moveTo({\n          position: blitzboard.prevZoomPosition,\n          scale: blitzboard.config.zoom?.min\n        });\n      }\n      else if(blitzboard.config.zoom?.max && blitzboard.network.getScale() > blitzboard.config.zoom.max){\n        blitzboard.network.moveTo({\n          position: blitzboard.prevZoomPosition,\n          scale: blitzboard.config.zoom.max,\n        });\n      } else {\n        blitzboard.prevZoomPosition = pos;\n      }\n    });\n    \n    if(this.map) {\n      this.updateNodeLocationOnMap();\n    }\n    \n    this.network.on(\"hoverNode\", (e) => {\n      this.network.canvas.body.container.style.cursor = 'default';\n      const node = this.nodeDataSet.get(e.node);\n      if(node && node.url) {\n        this.network.canvas.body.container.style.cursor = 'pointer';\n        this.nodeDataSet.update({\n          id: e.node,\n          color: '#8888ff',\n        });\n        if(this.config.node.onHover) {\n          this.config.node.onHover(this.getNode(e.node));\n        }\n      } else if(node && node.degree > 1 && !this.expandedNodes.includes(e.node)) {\n        this.network.canvas.body.container.style.cursor = 'pointer';\n      }\n    });\n\n    function plotTimes(startTime, interval, intervalUnit, timeForOnePixel, offsetX, offsetY, rightMostX, context, scale) {\n      let currentTime = new Date(startTime);\n      switch(intervalUnit) {\n        case 'year':\n          currentTime = new Date(currentTime.getFullYear()  - currentTime.getFullYear() % interval, 0, 1);\n          break;\n        case 'month':\n          currentTime = new Date(currentTime.getFullYear(), currentTime.getMonth() - currentTime.getMonth() % interval, 1);\n          break;\n        case 'day':\n          currentTime = new Date(currentTime.getFullYear(), currentTime.getMonth(), currentTime.getDate());\n          break;\n        default:\n          return;\n      }\n      let i = 0;\n      while(++i < 100) {\n        const nextPosition = -offsetX + (currentTime - startTime) / timeForOnePixel;\n        if(nextPosition > rightMostX) break;\n        if(intervalUnit === 'year')\n          context.fillText(currentTime.getFullYear(), nextPosition, -offsetY);\n        else\n          context.fillText(currentTime.toLocaleDateString(), nextPosition, -offsetY);\n        context.moveTo(nextPosition, -offsetY);\n        context.lineTo(nextPosition, -offsetY + 25 / scale);\n        context.stroke();\n        switch(intervalUnit) {\n          case 'year':\n            currentTime.setFullYear(currentTime.getFullYear() + interval);\n            break;\n          case 'month':\n            currentTime.setMonth(currentTime.getMonth() + interval);\n            break;\n          case 'day':\n            currentTime.setDate(currentTime.getDate() + interval);\n            break;\n          default:\n            return;\n        }\n      }\n    }\n    \n    this.network.on(\"afterDrawing\", (ctx) => {\n      for(let node of this.graph.nodes) {\n        node = this.nodeDataSet.get(node.id);\n        if(node && node.shape !== 'image' && (node.customIcon || this.config.node.defaultIcon)) {\n          let position = this.network.getPosition(node.id);\n          let pgNode = this.nodeMap[node.id];\n          if(node.customIcon) {\n            if(node.customIcon.name && Blitzboard.loadedIcons[node.customIcon.name]) { // Iconiy\n              ctx.drawImage(Blitzboard.loadedIcons[node.customIcon.name],\n                position.x - node.size * Blitzboard.iconSizeCoef / 2, position.y - node.size * Blitzboard.iconSizeCoef / 2,\n                node.size * Blitzboard.iconSizeCoef, \n                node.size * Blitzboard.iconSizeCoef);\n            } else { // Ionicons\n              ctx.font = `${node.customIcon.size}px Ionicons`;\n              ctx.fillStyle = \"white\";\n              ctx.textAlign = \"center\";\n              ctx.textBaseline = \"middle\";\n              ctx.fillText(node.customIcon.code, position.x, position.y);\n            }\n          } else {\n            if(!pgNode) {\n              continue;\n            }\n            for (let label of pgNode.labels) {\n              let lowerLabel = label.toLowerCase();\n              if (Blitzboard.loadedIcons[lowerLabel]) {\n                if(Blitzboard.loadedIcons[lowerLabel] != 'retrieving...')\n                  ctx.drawImage(Blitzboard.loadedIcons[lowerLabel], position.x - node.size * Blitzboard.iconSizeCoef / 2,\n                    position.y - node.size * Blitzboard.iconSizeCoef / 2,\n                    node.size * Blitzboard.iconSizeCoef,\n                    node.size * Blitzboard.iconSizeCoef);\n                break;\n              }\n            }\n          }\n        }\n      }\n\n     if(this.config.layout === 'timeline'){\n        const context = this.network.canvas.getContext(\"2d\");\n        const view = this.network.canvas.body.view;\n        const offsetY = (view.translation.y - 20) / view.scale;\n        const offsetX = view.translation.x / view.scale;\n        const timeForOnePixel = (this.maxTime - this.minTime) / this.timeScale;\n        const timeOnLeftEdge = new Date(((this.maxTime.getTime() + this.minTime.getTime()) / 2) - timeForOnePixel * offsetX);\n        const clientWidth = this.network.canvas.body.container.clientWidth;\n        const rightMost = -offsetX + clientWidth / view.scale;\n        const oneMonth = 31 * 24 * 60 * 60 * 1000;\n        const oneDay = 24 * 60 * 60 * 1000;\n        const twoMonth = oneMonth * 2;\n        const fourMonth = twoMonth * 2;\n        const oneYear = 365 * oneDay;\n        const minDistance = 200;\n        context.font = (20 / view.scale).toString() + \"px Arial\";\n        context.fillStyle = \"blue\";\n        const minimumInterval = timeForOnePixel * minDistance / view.scale;\n        if(minimumInterval > oneYear ) {\n          plotTimes(timeOnLeftEdge, minimumInterval / oneYear, 'year', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n        }\n        else if(minimumInterval > fourMonth ) {\n          plotTimes(timeOnLeftEdge, 4, 'month', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n        }\n        else if(minimumInterval > twoMonth) {\n          plotTimes(timeOnLeftEdge, 2, 'month', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n        }\n        else if(minimumInterval > oneMonth) {\n          plotTimes(timeOnLeftEdge, 1, 'month', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n        } else if(minimumInterval > oneDay * 16) {\n          plotTimes(timeOnLeftEdge, 16, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n        } else if(minimumInterval > oneDay * 8) {\n          plotTimes(timeOnLeftEdge, 8, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n        } else if(minimumInterval > oneDay * 4) {\n          plotTimes(timeOnLeftEdge, 4, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n        } else if(minimumInterval > oneDay * 2) {\n          plotTimes(timeOnLeftEdge, 2, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n        } else {\n          plotTimes(timeOnLeftEdge, 1, 'day', timeForOnePixel, offsetX, offsetY, rightMost, context, view.scale);\n        }\n      }\n    });\n    this.network.on(\"blurNode\", (params) => {\n      this.network.canvas.body.container.style.cursor = 'default';\n      let node = this.nodeDataSet.get(params.node);\n      if(node && node.url) {\n        this.nodeDataSet.update({\n          id: params.node,\n          color: null,\n        });\n      }\n    });\n\n    if (!Blitzboard.fondLoaded && document.fonts) {\n      Blitzboard.fondLoaded = true;\n      let blitzboard = this;\n      // Decent browsers: Make sure the fonts are loaded.\n      document.fonts.load('normal normal 400 24px/1 \"FontAwesome\"')\n        .catch(\n          console.error.bind(console, \"Failed to load Font Awesome 4.\")\n        ).then(function () {\n        blitzboard.network.redraw();\n      })\n        .catch(\n          console.error.bind(\n            console,\n            \"Failed to render the network with Font Awesome 4.\"\n          )\n        );\n    }\n\n    function clickHandler(e) {\n      blitzboard.doubleClickTimer = null;\n      if (e.nodes.length > 0) {\n        if (blitzboard.config.node.onClick) {\n          blitzboard.config.node.onClick(blitzboard.getNode(e.nodes[0]));\n        }\n      } else if (e.edges.length > 0) {\n        if (blitzboard.config.edge.onClick) {\n          blitzboard.config.edge.onClick(blitzboard.getEdge(e.edges[0]));\n        }\n      }\n    }\n\n    this.network.on(\"click\", (e) => {\n      if(!this.doubleClickTimer) {\n        if (this.config.doubleClickWait <= 0) {\n          clickHandler(e);\n        } else {\n          this.doubleClickTimer = setTimeout(() => clickHandler(e), this.config.doubleClickWait);\n        }\n      }\n    });\n\n    \n    this.network.on(\"doubleClick\", (e) => {\n      clearTimeout(this.doubleClickTimer);\n      this.doubleClickTimer = null;\n      if(e.nodes.length > 0) {\n        if(this.config.node.onDoubleClick) {\n          this.config.node.onDoubleClick(this.getNode(e.nodes[0]));\n        }\n      } else if(e.edges.length > 0) {\n        if(this.config.edge.onDoubleClick) {\n          this.config.edge.onDoubleClick(this.getEdge(e.edges[0]));\n        }\n      }\n    });\n  }\n\n\n  scrollNodeIntoView(node, select = true) {\n    if(typeof(node) === 'string')\n      node = this.nodeMap[node];\n    if(!node)\n      return;\n\n    if(this.config.layout === 'map') {\n      this.scrollMapToNode(this.nodeMap[node.id]);\n    } else {\n      this.scrollNetworkToPosition(this.network.getPosition(node.id));\n    }\n    if(select)\n      this.network.selectNodes([node.id]);\n\n    for(let callback of this.onNodeFocused) {\n      // TODO: The argument should be proxy instead of plain objects\n      callback(node);\n    }\n  }\n  \n  scrollNetworkToPosition(position) {\n    clearTimeout(this.scrollAnimationTimerId);\n    this.scrollAnimationTimerId = setTimeout(() => {\n      const animationOption = {\n        scale: 1.0,\n        animation:\n          {\n            duration: 500,\n            easingFuntcion: \"easeInOutQuad\"\n          }\n      };\n      this.network.moveTo({ ...{position: position}, ...animationOption });\n    }, 200); // Set delay to avoid calling moveTo() too much (seem to cause some bug on animation)\n  }\n  \n  updateNodeLocationOnMap() {\n    let nodePositions = [];\n    let lngKey =  this.config.layoutSettings.lng;\n    let latKey =  this.config.layoutSettings.lat;\n    this.graph.nodes.forEach(node => {\n      if(node.properties[latKey] && node.properties[lngKey]) {\n        let point = this.map.latLngToContainerPoint([node.properties[latKey][0], node.properties[lngKey][0]]);\n        point = this.network.DOMtoCanvas(point);\n        nodePositions.push({\n          id: node.id,\n          x: point.x, y: point.y, fixed: true\n        });\n      }\n    });\n    this.nodeDataSet.update(nodePositions);\n  }\n\n\n  updateNodeLocationOnTimeLine() {\n    let nodePositions = [];\n    this.graph.nodes.forEach(node => {\n      let x, y, fixed, width;\n      ({x, y, fixed, width} = this.calcNodePosition(node));\n      nodePositions.push({\n        id: node.id,\n        x, y\n      });\n    });\n    this.nodeDataSet.update(nodePositions);\n  }\n  \n  scrollMapToNode(node) {\n    let lngKey = this.config.layoutSettings.lng;\n    let latKey = this.config.layoutSettings.lat;\n    this.map.panTo([node.properties[latKey][0] ,node.properties[lngKey][0]]);\n  }\n  \n  scrollEdgeIntoView(edge, select = true) {\n    if(typeof(edge) === 'string') {\n      edge = this.edgeMap[edge];\n    }\n\n    if(this.config.layout === 'map') {\n      this.scrollMapToNode(this.nodeMap[edge.from]);\n    } else {\n      const from = this.network.getPosition(edge.from);\n      const to = this.network.getPosition(edge.to);\n      this.scrollNetworkToPosition({ x: (from.x + to.x) / 2, y: (from.y + to.y) /2 });\n    }\n    if(select) {\n      blitzboard.network.selectEdges([edge.id]);\n    }\n\n    for(let callback of this.onEdgeFocused) {\n      // TODO: The argument should be proxy instead of plain objects\n      callback(edge);\n    }\n  }\n  \n  showLoader(text = \"Now loading...\") {\n    this.screen.style.display = 'flex';\n    this.screenText.innerText = text;\n    this.screenText.style.display = text ? 'block' : 'none';\n  }\n  \n  hideLoader() {\n    this.screen.style.display = 'none';\n  }\n}\n\nlet markers = [];\nlet nodeProps, edgeProps;\n\nfunction arrayEquals(a, b) {\n  return Array.isArray(a) &&\n    Array.isArray(b) &&\n    a.length === b.length &&\n    a.every((val, index) => val === b[index]);\n}\n\nfunction nodeEquals(node1, node2) {\n  if(node1.id != node2.id || !arrayEquals(node1.labels, node2.labels)) {\n    return false;\n  }\n  let node1Keys = Object.keys(node1.properties);\n  let node2Keys = Object.keys(node2.properties);\n  if(node1Keys.length != node2Keys.length) {\n    return false;\n  }\n  for(let key of node1Keys) {\n    if(!arrayEquals(node1.properties[key], node2.properties[key]))\n      return false;\n  }\n  return true;\n}\n\n\nfunction deepMerge(target, source) {\n  const isObject = obj => obj && typeof obj === 'object' && !Array.isArray(obj);\n  let result = Object.assign({}, target);\n  if (isObject(target) && isObject(source)) {\n    for (const [sourceKey, sourceValue] of Object.entries(source)) {\n      const targetValue = target[sourceKey];\n      if (isObject(sourceValue) && target.hasOwnProperty(sourceKey)) {\n        result[sourceKey] = deepMerge(targetValue, sourceValue);\n      }\n      else {\n        Object.assign(result, {[sourceKey]: sourceValue});\n      }\n    }\n  }\n  return result;\n}\n\nfunction retrieveHttpUrl(node) {\n  let candidates = [];\n  for(let entry of Object.entries(node.properties)) {\n    for(let prop of entry[1]) {\n      if(typeof(prop) === 'string' && (prop.startsWith(\"https://\") || prop.startsWith(\"http://\"))) {\n        if(entry[0].toLowerCase() == 'url')\n          return prop;\n        candidates.push([entry[0], prop]);\n      }\n    }\n  }\n  return candidates[0];\n}\n\n\nfunction toNodePairString(pgEdge) {\n  return `${pgEdge.from}-${pgEdge.to}`;\n}\n\n\nfunction wrapText(str, asHtml) {\n  if(!str)\n    return str;\n  if(Array.isArray(str))\n    str = str[0];\n  const maxWidth = 40;\n  let newLineStr = asHtml ? \"<br>\" : \"\\n\", res = '';\n  while (str.length > maxWidth) {\n    res += str.slice(0, maxWidth) + newLineStr;\n    str = str.slice(maxWidth);\n  }\n  return res + str;\n}\n\nfunction createLabelText(elem, props = null) {\n  if (props != null) {\n    // Use whitespace instead of empty string if no props are specified because Vis.js cannot update label with empty string)\n    return props.length ? props.map((prop) => prop === 'id' ? elem.id : (prop === 'label' ? elem.labels : wrapText(elem.properties[prop]))).filter((val) => val).join('\\n') : ' ';\n  }\n}\n\nfunction createTitleText(elem) {\n  let flattend_props = Object.entries(elem.properties).reduce((acc, prop) =>\n    acc.concat(`<tr valign=\"top\"><td>${prop[0]}</td><td> : ${wrapText(prop[1], true)}</td></tr>`), []);\n  if (elem.id) // for nodes\n  {\n    let idText = `<tr><td><b>${elem.id}</b></td><td> : ${wrapText(elem.labels.join(':'), true)}</td></tr>`;\n    flattend_props.splice(0, 0, idText);\n  }\n  if (flattend_props.length === 0) {\n    return null;\n  }\n  return htmlTitle(`<table style='fixed'>${flattend_props.join('')}</table>`);\n}\n\n// Create random colors, with str as seed, and with fixed saturation and lightness\nfunction getRandomColor(str, saturation, brightness) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  let hue = hash % 360;\n  return 'hsl(' + hue + `, ${saturation}, ${brightness})`;\n}\n\nfunction setSearchState(searching) {\n  const icon =  q('#search-icon');\n  if(searching) {\n    icon.classList.remove(\"fa-search\");\n    icon.classList.add(\"fa-spinner\");\n    icon.classList.add(\"fa-spin\");\n  } else {\n    icon.classList.add(\"fa-search\");\n    icon.classList.remove(\"fa-spinner\");\n    icon.classList.remove(\"fa-spin\");\n  }\n}\n\nfunction isDateString(str) {\n  return isNaN(str) && !isNaN(Date.parse(str))\n}\n\nfunction tryPgParse(pg) {\n  for(let marker of markers)\n    marker.clear();\n  markers = [];\n  try {\n    return pgParser.parse(pg);\n  } catch(e) {\n    console.log(e);\n    if (!e.hasOwnProperty('location'))\n      throw(e);\n    let loc = e.location;\n    // Mark leading characters in the error line\n    markers.push(editor.markText({line: loc.start.line - 1, ch: 0}, {line: loc.start.line - 1, ch: loc.start.column - 1}, {className: 'syntax-error-line', message: e.message}));\n    markers.push(editor.markText({line: loc.start.line - 1, ch: loc.start.column - 1}, {line: loc.end.line - 1, ch: loc.end.column - 1}, {className: 'syntax-error', message: e.message}));\n    // Mark following characters in the error line\n    markers.push(editor.markText({line: loc.end.line - 1, ch: loc.end.column - 1}, {line: loc.end.line - 1, ch: 10000},\n      {className: 'syntax-error-line', message: e.message}));\n    toastr.error(e.message, 'PG SyntaxError', {preventDuplicates: true})\n    return null;\n  }\n}\n\nfunction htmlTitle(html) {\n  const container = document.createElement(\"div\");\n  container.innerHTML = html;\n  return container;\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}