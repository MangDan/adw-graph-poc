{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      drawer: null,\n      cookie: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$axios({\n      method: \"post\",\n      url: \"/ui/v1/login/\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: {\n        \"username\": \"nh\",\n        \"password\": \"Oracle123456!\",\n        \"pgqlDriver\": \"pgxDriver\",\n        \"baseUrl\": \"http://132.226.238.127:7007/\"\n      },\n      withCredentials: true,\n      cossDomain: true\n    }).then(function (result) {\n      _this.cookie = result.headers['set-cookie'];\n      testDrawGraph();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  methods: {\n    drawerButton: function drawerButton() {\n      this.$EventBus.$emit(\"drawerButton\");\n    },\n    testDrawGraph: function testDrawGraph() {\n      var query = '';\n      query = query + 'SELECT * FROM MATCH (n1)-[e]-(n2) ';\n      query = query + \"LIMIT 10\";\n      this.$axios({\n        method: \"get\",\n        url: \"http://132.226.238.127:7007/ui/v1/query?pgql=\" + encodeURI(query) + '&graph=G_NH_STOCK',\n        headers: {\n          'Content-type': 'application/json',\n          'Cookie': this.cookie\n        },\n        withCredentials: true,\n        cossDomain: true\n      }).then(function (response) {\n        console.log(response.status);\n        var nodes = [];\n        var edges = [];\n        var result = response.data; // Nodes\n\n        result.graph.vertices.forEach(function (elem) {\n          var node = {\n            id: elem._id,\n            labels: elem.l,\n            properties: {}\n          };\n          elem.p.forEach(function (elem_p) {\n            if (elem_p.v) {\n              node.properties[elem_p.n] = [elem_p.v];\n            }\n          });\n          console.log(\"node = \" + node);\n          nodes.push(node);\n        }); // Edges\n\n        result.graph.edges.forEach(function (elem) {\n          var edge = {\n            id: elem._id,\n            from: elem.s,\n            to: elem.d,\n            labels: elem.l,\n            properties: {}\n          };\n          elem.p.forEach(function (elem_p) {\n            if (elem_p.v) {\n              edge.properties[elem_p.n] = [elem_p.v];\n            }\n          });\n          console.log(\"edge = \" + edge);\n          edges.push(edge);\n        });\n        var jsonData = {\n          \"nodes\": nodes,\n          \"edges\": edges\n        };\n        console.log(\"^^^^^^^^^^^^^^^^^^^^^^^^^^^\");\n        console.log(jsonData);\n        console.log(\"^^^^^^^^^^^^^^^^^^^^^^^^^^^\");\n      }).catch(function (error) {//console.log(error)\n      }).then(function () {}).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;EACAA;IAAA;MAAAC;MAAAC;IAAA;EAAA,CADA;EAEAC,OAFA,qBAEA;IAAA;;IACA;MACAC,cADA;MAEAC,oBAFA;MAGAC;QAAA;MAAA,CAHA;MAIAN;QACA,gBADA;QAEA,2BAFA;QAGA,yBAHA;QAIA;MAJA,CAJA;MAUAO,qBAVA;MAWAC;IAXA,GAYAC,IAZA,CAYA;MACA;MAEAC;IACA,CAhBA,EAgBAC,KAhBA,CAgBA;MACAC;IACA,CAlBA;EAmBA,CAtBA;EAuBAC;IACAC,YADA,0BACA;MACA;IACA,CAHA;IAIAJ,aAJA,2BAIA;MACA;MACAK;MACAA;MAEA;QACAX,aADA;QAEAC,6FAFA;QAGAC;UAAA;UAAA;QAAA,CAHA;QAIAC,qBAJA;QAKAC;MALA,GAMAC,IANA,CAMA;QACAG;QACA;QACA;QACA,2BAJA,CAKA;;QACAI;UACA;YACAC,YADA;YAEAC,cAFA;YAGAC;UAHA;UAKAC;YACA;cACAC;YACA;UACA,CAJA;UAKAT;UACAU;QACA,CAbA,EANA,CAoBA;;QACAN;UACA;YACAC,YADA;YAEAM,YAFA;YAGAC,UAHA;YAIAN,cAJA;YAKAC;UALA;UAOAC;YACA;cACAK;YACA;UACA,CAJA;UAMAb;UACAc;QACA,CAhBA;QAiBA;UAAA;UAAA;QAAA;QACAd;QACAA;QACAA;MAEA,CAjDA,EAkDAD,KAlDA,CAkDA,kBACA;MACA,CApDA,EAqDAF,IArDA,CAqDA,aAEA,CAvDA,EAuDAE,KAvDA,CAuDA;QACAC;MACA,CAzDA;IA0DA;EAnEA;AAvBA","names":["data","drawer","cookie","mounted","method","url","headers","withCredentials","cossDomain","then","testDrawGraph","catch","console","methods","drawerButton","query","result","id","labels","properties","elem","node","nodes","from","to","edge","edges"],"sourceRoot":"src/layouts","sources":["Header.vue"],"sourcesContent":["<template>\n  <v-app-bar\n      app\n      color=\"#c83b29\"\n      dark\n    >\n      <v-app-bar-nav-icon @click=\"drawerButton\"></v-app-bar-nav-icon>\n      <div class=\"d-flex align-center\">\n\n        <v-img\n          alt=\"Vuetify Name\"\n          contain\n          min-width=\"100\"\n          src=\"../assets/oracle-cloud-logo.png\"\n          width=\"100\"\n        />\n\n        <v-img\n          alt=\"OCI Logo\"\n          class=\"shrink mr-2\"\n          contain\n          src=\"../assets/oci-logo.png\"\n          transition=\"scale-transition\"\n          width=\"50\"\n        />\n      </div>\n\n      <v-spacer></v-spacer>\n\n      <v-btn\n        href=\"https://github.com/vuetifyjs/vuetify/releases/latest\"\n        target=\"_blank\"\n        text\n      >\n        <span class=\"mr-2\">Help</span>\n        <v-icon>mdi-open-in-new</v-icon>\n      </v-btn>\n    </v-app-bar>\n</template>\n\n<script>\n  export default {\n    data: () => ({ drawer: null, cookie: null }),\n    mounted() {\n      this.$axios({\n        method: \"post\",\n        url: \"/ui/v1/login/\",\n        headers: { \"Content-Type\": \"application/json\" },\n        data: {\n          \"username\": \"nh\",\n          \"password\": \"Oracle123456!\",\n          \"pgqlDriver\": \"pgxDriver\",\n          \"baseUrl\": \"http://132.226.238.127:7007/\"\n        },\n        withCredentials: true,\n        cossDomain: true\n      }).then(result => {\n          this.cookie = result.headers['set-cookie'];\n\n          testDrawGraph();\n      }).catch(error => {\n          console.log(error);\n      });\n    },\n    methods: {\n      drawerButton() {\n        this.$EventBus.$emit(\"drawerButton\");\n      },\n      testDrawGraph() {\n        let query = ''\n        query = query + 'SELECT * FROM MATCH (n1)-[e]-(n2) ';\n        query = query + \"LIMIT 10\";\n\n        this.$axios({\n        method: \"get\",\n        url: \"http://132.226.238.127:7007/ui/v1/query?pgql=\" + encodeURI(query) + '&graph=G_NH_STOCK',\n        headers: { 'Content-type': 'application/json', 'Cookie': this.cookie },\n        withCredentials: true,\n        cossDomain: true\n      }).then(function (response) {\n          console.log(response.status)\n          var nodes = []\n          var edges = []\n          let result = response.data\n          // Nodes\n          result.graph.vertices.forEach((elem) => {\n            let node = {\n              id: elem._id,\n              labels: elem.l,\n              properties: {}\n            };\n            elem.p.forEach((elem_p) => {\n              if (elem_p.v) {\n                node.properties[elem_p.n] = [elem_p.v];\n              }\n            });\n            console.log(\"node = \" + node);\n            nodes.push(node)\n          });\n          // Edges\n          result.graph.edges.forEach((elem) => {\n            let edge = {\n              id: elem._id,\n              from: elem.s,\n              to: elem.d,\n              labels: elem.l,\n              properties: {}\n            };\n            elem.p.forEach((elem_p) => {\n              if (elem_p.v) {\n                edge.properties[elem_p.n] = [elem_p.v];\n              }\n            });\n\n            console.log(\"edge = \" + edge);\n            edges.push(edge)\n          });\n          let jsonData = { \"nodes\": nodes, \"edges\": edges }\n          console.log(\"^^^^^^^^^^^^^^^^^^^^^^^^^^^\")\n          console.log(jsonData)\n          console.log(\"^^^^^^^^^^^^^^^^^^^^^^^^^^^\")\n                  \n        })\n        .catch(function (error) {\n          //console.log(error)\n        })\n        .then(function () {\n\n        }).catch(error => {\n          console.log(error);\n      });\n      }\n    }\n  }\n</script>"]},"metadata":{},"sourceType":"module"}